{
    "version": 3,
    "sources": ["webpack:///webpack/bootstrap", "webpack:///./src/App.vue?7e33", "webpack:///./src/components/main.vue?3e8c", "webpack:///./src/components/eventVue.js", "webpack:///src/components/main.vue", "webpack:///./src/components/main.vue?e350", "webpack:///./src/components/main.vue", "webpack:///./src/components/toolBar.vue?291d", "webpack:///src/components/toolBar.vue", "webpack:///./src/components/toolBar.vue?829e", "webpack:///./src/components/toolBar.vue", "webpack:///src/App.vue", "webpack:///./src/App.vue?1160", "webpack:///./src/App.vue", "webpack:///./src/main.js", "webpack:///./src/App.vue?8732", "webpack:///./src/components/toolBar.vue?0eb5"],
    "names": ["webpackJsonpCallback", "data", "moduleId", "chunkId", "chunkIds", "moreModules", "executeModules", "i", "resolves", "length", "installedChunks", "push", "Object", "prototype", "hasOwnProperty", "call", "modules", "parentJsonpFunction", "shift", "deferredModules", "apply", "checkDeferredModules", "result", "deferredModule", "fulfilled", "j", "depId", "splice", "__webpack_require__", "s", "installedModules", "app", "exports", "module", "l", "m", "c", "d", "name", "getter", "o", "defineProperty", "enumerable", "get", "r", "Symbol", "toStringTag", "value", "t", "mode", "__esModule", "ns", "create", "key", "bind", "n", "object", "property", "p", "jsonpArray", "window", "oldJsonpFunction", "slice", "Appvue_type_template_id_16bd4826_render", "_vm", "this", "_h", "$createElement", "_c", "_self", "attrs", "id", "msg", "staticRenderFns", "mainvue_type_template_id_de4432b0_scoped_true_render", "_v", "_s", "ref", "width", "height", "on", "mousedown", "$event", "canvasDown", "mousemove", "canvasMove", "mouseup", "canvasUp", "mouseleave", "canvasLeave", "mainvue_type_template_id_de4432b0_scoped_true_staticRenderFns", "eventVue", "Vue", "mainvue_type_script_lang_js_", "props", "String", "mounted", "_this", "$on", "message", "colorstyle", "type", "openbox", "clean", "dele", "show", "clickCanvasX", "clickCanvasY", "polynumber", "imageData1", "tempcanvax", "tempcanvay", "tempcount", "tempdata", "tempupdata", "judge1", "judge2", "judge3", "alltypetemp", "alltype", "allRanPolyData", "ranpolyData", "clickjudge", "clickjudge1", "tempnumber", "Number", "clickdata", "methods", "canvas", "$refs", "ctx", "getContext", "lineWidth", "rect", "stroke", "e", "temp", "canvasMoveUse", "clientX", "target", "offsetLeft", "clientY", "offsetTop", "document", "documentElement", "scrollTop", "x", "y", "moveTo", "strokeStyle", "_temp", "construct", "mainvue_type_script_lang_js_RadompolyNumber", "generate", "_temp2", "a", "b", "newset", "RanPolyType", "mainvue_type_script_lang_js_RadomPolyType", "concat", "toConsumableArray", "error", "_i", "Array", "beginPath", "closePath", "isPointInPath", "cleanScreen", "generateAgainAll", "drawDashRect", "color", "compare", "minx", "miny", "maxx", "maxy", "canvasX", "canvasY", "shiftX", "shiftY", "offset", "temparray", "mainvue_type_script_lang_js_Beeline", "mainvue_type_script_lang_js_BezierEllipse2", "mainvue_type_script_lang_js_Rectangle", "mainvue_type_script_lang_js_Star", "mainvue_type_script_lang_js_Ploygon", "fir", "other", "mainvue_type_script_lang_js_Line", "mainvue_type_script_lang_js_Radompoly", "sucker", "Math", "pow", "abs", "isshort", "sqrt", "_i2", "fillStyle", "fill", "_this2", "$prompt", "confirmButtonText", "cancelButtonText", "inputPattern", "inputErrorMessage", "then", "_ref", "$message", "catch", "arc", "PI", "dis", "lineTo", "$notify", "title", "Line", "classCallCheck", "BezierEllipse2", "k", "ox", "oy", "bezierCurveTo", "Rectangle", "Star", "offsetx", "offsety", "cos", "sin", "restore", "tempx", "tempy", "maopao", "Ploygon", "num", "ang", "save", "translate", "rotate", "Beeline", "min", "max", "Radompoly", "mox", "moy", "RadompolyNumber", "RadomPolyType", "_len", "arguments", "_key", "arr", "mainvue_type_script_lang_js_drawDashLine", "_ref2", "_ref3", "_ref4", "slicedToArray", "x1", "y1", "_ref5", "x2", "y2", "step", "undefined", "count", "floor", "xv", "yv", "left", "top", "components_mainvue_type_script_lang_js_", "component", "componentNormalizer", "main", "toolBarvue_type_template_id_5306397a_scoped_true_render", "gutter", "span", "shadow", "staticClass", "icon", "circle", "click", "staticStyle", "line-height", "autofocus", "size", "line", "beeline", "star", "rectangle", "radius", "radomPloygon", "padding", "style", "styleObj", "color1", "toolBarvue_type_template_id_5306397a_scoped_true_staticRenderFns", "toolBarvue_type_script_lang_js_", "act", "backgroundColor", "$emit", "currentTarget", "components_toolBarvue_type_script_lang_js_", "toolBar_component", "toolBar", "Appvue_type_script_lang_js_", "components", "HelloWorld", "activeIndex", "activeIndex2", "src_Appvue_type_script_lang_js_", "App_component", "App", "use", "ElementUI", "el", "render", "h", "_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_1_lang_css___WEBPACK_IMPORTED_MODULE_0__", "_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_1_lang_css___WEBPACK_IMPORTED_MODULE_0___default", "_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_toolBar_vue_vue_type_style_index_0_id_5306397a_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__", "_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_toolBar_vue_vue_type_style_index_0_id_5306397a_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],
    "mappings": "aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,EAAA,GACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAGAe,KAAAhB,GAEA,MAAAO,EAAAC,OACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,GAAA,IAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,EAAA,GAKApB,EAAA,CACAqB,IAAA,GAGAZ,EAAA,GAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,GAAA,CACAK,EAAAL,EACAgC,GAAA,EACAF,QAAA,IAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,EAAA,CAA0CI,YAAA,EAAAC,IAAAJ,KAK1CX,EAAAgB,EAAA,SAAAZ,GACA,qBAAAa,eAAAC,aACAlC,OAAA6B,eAAAT,EAAAa,OAAAC,YAAA,CAAwDC,MAAA,WAExDnC,OAAA6B,eAAAT,EAAA,cAAiDe,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,kBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAvC,OAAAwC,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAvC,OAAA6B,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAS,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAtB,GACA,IAAAM,EAAAN,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,YAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAgB,EAAAC,GAAsD,OAAA7C,OAAAC,UAAAC,eAAAC,KAAAyC,EAAAC,IAGtD7B,EAAA8B,EAAA,GAEA,IAAAC,EAAAC,OAAA,gBAAAA,OAAA,oBACAC,EAAAF,EAAAhD,KAAA2C,KAAAK,GACAA,EAAAhD,KAAAX,EACA2D,IAAAG,QACA,QAAAvD,EAAA,EAAgBA,EAAAoD,EAAAlD,OAAuBF,IAAAP,EAAA2D,EAAApD,IACvC,IAAAU,EAAA4C,EAIA1C,EAAAR,KAAA,qBAEAU,+LCtJI0C,aAAM,WAAgB,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,MAAA,CAAOC,GAAA,QAAY,CAAAH,EAAA,WAAAA,EAAA,cAAiCE,MAAA,CAAOE,IAAA,OAAU,KAC/KC,EAAA,GCDIC,EAAM,WAAgB,IAAAV,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,MAAAJ,EAAAW,GAAAX,EAAAY,GAAAZ,EAAAQ,QAAAJ,EAAA,UAAiES,IAAA,SAAAP,MAAA,CAAoBC,GAAA,SAAAO,MAAA,MAAAC,OAAA,OAA2CC,GAAA,CAAKC,UAAA,SAAAC,GAA6B,OAAAlB,EAAAmB,WAAAD,IAA8BE,UAAA,SAAAF,GAA8B,OAAAlB,EAAAqB,WAAAH,IAA8BI,QAAA,SAAAJ,GAA4B,OAAAlB,EAAAuB,SAAAL,IAA4BM,WAAA,SAAAN,GAA+B,OAAAlB,EAAAyB,YAAAP,UACxaQ,EAAe,2ECCJC,aAAA,IAAIC,cCkBnBC,EAAA,CACAvD,KAAA,aACAwD,MAAA,CACAtB,IAAAuB,QAEAC,QALA,WAKA,IAAAC,EAAAhC,KACA0B,EAAAO,IAAA,iBAAAC,GACAF,EAAAG,WAAAD,IAEAR,EAAAO,IAAA,gBAAAC,GACAF,EAAAI,KAAAF,EACA,WAAAA,GAGAF,EAAAK,QAAAH,KAGAR,EAAAO,IAAA,mBACAD,EAAAM,UAGAZ,EAAAO,IAAA,kBACAD,EAAAO,SAGAvC,KAAAwC,QAEAxG,KA3BA,WA4BA,OACAmG,WAAA,eACAM,aAAA,GACAC,aAAA,GACAN,KAAA,OAEAO,WAAA,EACAC,WAAA,GACAC,WAAA,EACAC,WAAA,EACAC,UAAA,EACAC,SAAA,GACAC,WAAA,GACAC,QAAA,EACAC,QAAA,EACAC,QAAA,EACAC,YAAA,GACAC,QAAA,GACAC,eAAA,GACAC,YAAA,GACAC,YAAA,EACAC,aAAA,EACAC,WAAAC,OACAC,UAAA,GACAzE,IAAA,KAGA0E,QAAA,CACAtB,KADA,WAEAxC,KAAA+D,OAAA/D,KAAAgE,MAAAD,OACA/D,KAAAiE,IAAAjE,KAAA+D,OAAAG,WAAA,MACAlE,KAAAiE,IAAAE,UAAA,EACAnE,KAAAiE,IAAAG,KAAA,aAEApE,KAAAiE,IAAAI,UAGAnD,WAVA,SAUAoD,GAIA,IAAAxF,EACAyF,EAQA,GAZAvE,KAAAwE,eAAA,EACAxE,KAAAyC,aAAA6B,EAAAG,QAAAH,EAAAI,OAAAC,WACA3E,KAAA0C,aAAA4B,EAAAM,QAAAN,EAAAI,OAAAG,UAAAC,SAAAC,gBAAAC,UAKA,gBAAAhF,KAAAoC,OACApC,KAAAkD,QAAA,GAEAlD,KAAAgD,SAAAtG,KAAA,CAAAuI,EAAAjF,KAAAyC,aAAAyC,EAAAlF,KAAA0C,eAEA1C,KAAAkD,OAAA,CACAlD,KAAAiE,IAAAkB,OAAAnF,KAAA6C,WAAA7C,KAAA8C,YAEA9C,KAAAiE,IAAAmB,YAAApF,KAAAmC,WACA,IAAAkD,EAAA,CAAArF,KAAAiE,IAAAjE,KAAAiD,WAAAjD,KAAAiD,WAAAzG,OAAA,GAAAyI,EAAAjF,KAAAiD,WAAAjD,KAAAiD,WAAAzG,OAAA,GAAA0I,EAAAlF,KAAAyC,aAAAzC,KAAA0C,aAAA1C,KAAAiE,IAAAmB,YAAApF,KAAAoC,MACApC,KAAAqD,YAAA1G,OAAA2I,EAAA,KAAA3I,CAAA4I,EAAAF,GACArF,KAAAqD,YAAAmC,WACAxF,KAAAiE,IAAAI,SAEA,IACA,GAAArE,KAAAiD,WAAAjD,KAAAiD,WAAAzG,OAAA,GAAAyI,GAAAjF,KAAAyC,cAAAzC,KAAAiD,WAAAjD,KAAAiD,WAAAzG,OAAA,GAAA0I,GAAAlF,KAAA0C,aAAA,CACA,IAAA+C,EAAA,CAAAzF,KAAAiE,IAAAjE,KAAAiD,WAAAjD,KAAAiD,WAAAzG,OAAA,GAAAyI,EAAAjF,KAAAiD,WAAAjD,KAAAiD,WAAAzG,OAAA,GAAA0I,EAAAlF,KAAAgD,SAAA,GAAAiC,EAAAjF,KAAAgD,SAAA,GAAAkC,EAAAlF,KAAA+C,UAAA/C,KAAAiE,IAAAmB,aACApF,KAAAuD,eAAA7G,KAAAC,OAAA2I,EAAA,KAAA3I,CAAA4I,EAAAE,IAIA,IAAAzC,EAAA,CAAAhD,KAAAiE,IAAAjE,KAAAuD,eAAA,GAAA0B,EAAAjF,KAAAuD,eAAA,GAAAmC,EAAA1F,KAAAuD,eAAA,GAAA2B,EAAAlF,KAAAuD,eAAA,GAAAoC,EAAA3F,KAAAuD,eAAA,GAAA0B,EAAAjF,KAAAuD,eAAA,GAAA2B,EAAAlF,KAAA+C,UAAA/C,KAAAiE,IAAAmB,aACAQ,EAAAjJ,OAAA2I,EAAA,KAAA3I,CAAA4I,EAAAvC,GACAhD,KAAAZ,IAAA,GACAY,KAAAZ,IAAA1C,KAAAkJ,GACA,QAAAtJ,EAAA,EAAAA,EAAA0D,KAAAuD,eAAA/G,OAAAF,IACA0D,KAAAZ,IAAA1C,KAAAsD,KAAAuD,eAAAjH,IAEA,IAAAuJ,EAAAlJ,OAAA2I,EAAA,KAAA3I,CAAAmJ,EAAA,CAAA9F,KAAAiE,IAAAjE,KAAAoC,KAAApC,KAAAiE,IAAAmB,YAAA,GAAAW,OAAApJ,OAAAqJ,EAAA,KAAArJ,CAAAqD,KAAAZ,OAcA,OAXAY,KAAAsD,QAAA5G,KAAAmJ,GAEA7F,KAAA6C,WAAA,EACA7C,KAAA8C,WAAA,EACA9C,KAAA+C,UAAA,EACA/C,KAAAgD,SAAA,GACAhD,KAAAiD,WAAA,GACAjD,KAAAuD,eAAA,GACAvD,KAAAkD,QAAA,EACAlD,KAAAmD,QAAA,OACAnD,KAAAoD,QAAA,IAMA,MAAA6C,UAIAjG,KAAAiE,IAAAkB,OAAAnF,KAAAyC,aAAAzC,KAAA0C,cAKA,QAAAwD,EAAA,EAAAA,EAAAlG,KAAAsD,QAAA9G,OAAA0J,IACA,KAAAlG,KAAAsD,QAAA4C,aAAAC,OAGA,OAAAnG,KAAAsD,QAAA4C,GAAA9D,MACA,aAIA,GAHApC,KAAAiE,IAAAmC,YACApG,KAAAiE,IAAAG,KAAApE,KAAAsD,QAAA4C,GAAAjB,EAAAjF,KAAAsD,QAAA4C,GAAAR,EAAA1F,KAAAsD,QAAA4C,GAAAhB,EAAAlF,KAAAsD,QAAA4C,GAAAP,EAAA,EAAA3F,KAAAsD,QAAA4C,GAAAR,EAAA,GAAA1F,KAAAsD,QAAA4C,GAAAP,GACA3F,KAAAiE,IAAAoC,YACArG,KAAAiE,IAAAqC,cAAAtG,KAAAyC,aAAAzC,KAAA0C,cAoBA,OAnBA1C,KAAAuG,YAAAvG,KAAAiE,KACAjE,KAAAwG,iBAAAxG,KAAAsD,SACAmD,EAAAzG,KAAAiE,IAAAjE,KAAAsD,QAAA4C,GAAAjB,EAAAjF,KAAAsD,QAAA4C,GAAAR,EAAA1F,KAAAsD,QAAA4C,GAAAhB,EAAAlF,KAAAsD,QAAA4C,GAAAP,EAAA,EAAA3F,KAAAsD,QAAA4C,GAAAR,EAAA,GAAA1F,KAAAsD,QAAA4C,GAAAP,GACA3F,KAAA6D,UAAAnH,KAAA,CAAAsD,KAAAsD,QAAA4C,GAAAjB,EAAAjF,KAAAsD,QAAA4C,GAAAR,EAAA1F,KAAAsD,QAAA4C,GAAAhB,EAAAlF,KAAAsD,QAAA4C,GAAAP,EAAA,EAAA3F,KAAAsD,QAAA4C,GAAAR,EAAA,GAAA1F,KAAAsD,QAAA4C,GAAAP,IACA3F,KAAAiE,IAAAmB,YAAApF,KAAAsD,QAAA4C,GAAAQ,MACA1G,KAAAyD,YAAA,EACAzD,KAAA2D,WAAAuC,OACAlG,KAAA0D,cACA1D,KAAA6D,UAAA,OAAA7D,KAAAsD,QAAA4C,GAAAjB,EAAAjF,KAAAsD,QAAA4C,GAAAR,GAAA1F,KAAA6D,UAAA,OAAA7D,KAAAsD,QAAA4C,GAAAhB,EAAAlF,KAAAsD,QAAA4C,GAAAP,GAAA3F,KAAA6D,UAAA,SAAA7D,KAAAsD,QAAA4C,GAAAR,GAAA1F,KAAA6D,UAAA,UAAA7D,KAAAsD,QAAA4C,GAAAP,IAIA3F,KAAA6D,UAAAnG,OAAA,KAEAsC,KAAA0D,aAAA,KASA1D,KAAAwG,iBAAAxG,KAAAsD,SACAtD,KAAAyD,YAAA,EAEA,IACAzD,KAAA6D,UAAA,OAAA7D,KAAAsD,QAAA4C,GAAAjB,EAAAjF,KAAAsD,QAAA4C,GAAAR,GAAA1F,KAAA6D,UAAA,OAAA7D,KAAAsD,QAAA4C,GAAAhB,EAAAlF,KAAAsD,QAAA4C,GAAAP,GAAA3F,KAAA6D,UAAA,SAAA7D,KAAAsD,QAAA4C,GAAAR,GAAA1F,KAAA6D,UAAA,UAAA7D,KAAAsD,QAAA4C,GAAAP,IACA3F,KAAA0D,aAAA,EACA1D,KAAA6D,UAAAnG,OAAA,KACAsC,KAAAuG,YAAAvG,KAAAiE,KACAjE,KAAAwG,iBAAAxG,KAAAsD,UAEA,MAAA2C,IAIA,MACA,gBAKA,GAJAnH,EAAAkB,KAAAsD,QAAA4C,GAAAS,UACA3G,KAAAiE,IAAAmC,YACApG,KAAAiE,IAAAG,KAAAtF,EAAA8H,KAAA9H,EAAA+H,KAAA/H,EAAAgI,KAAAhI,EAAA8H,KAAA9H,EAAAiI,KAAAjI,EAAA+H,MACA7G,KAAAiE,IAAAoC,YACArG,KAAAiE,IAAAqC,cAAAtG,KAAAyC,aAAAzC,KAAA0C,cAmBA,OAlBA1C,KAAAuG,YAAAvG,KAAAiE,KACAM,EAAAvE,KAAAsD,QAAA4C,GACAlG,KAAAsD,QAAA5F,OAAAwI,EAAA,GACAlG,KAAAwG,iBAAAxG,KAAAsD,SACAtD,KAAAsD,QAAA5F,OAAAwI,EAAA,EAAA3B,GACAkC,EAAAzG,KAAAiE,IAAAnF,EAAA8H,KAAA9H,EAAA+H,KAAA/H,EAAAgI,KAAAhI,EAAA8H,KAAA9H,EAAAiI,KAAAjI,EAAA+H,MACA7G,KAAAiE,IAAAmB,YAAApF,KAAAsD,QAAA4C,GAAAQ,MACA1G,KAAA6D,UAAAnH,KAAA,CAAAoC,EAAA8H,KAAA9H,EAAA+H,KAAA/H,EAAAgI,KAAAhI,EAAA8H,KAAA9H,EAAAiI,KAAAjI,EAAA+H,OACA7G,KAAAyD,YAAA,EACAzD,KAAA2D,WAAAuC,OACAlG,KAAA0D,cACA1D,KAAA6D,UAAA,OAAA/E,EAAA8H,MAAA5G,KAAA6D,UAAA,OAAA/E,EAAA+H,MAAA7G,KAAA6D,UAAA,OAAA/E,EAAAgI,KAAAhI,EAAA8H,MAAA5G,KAAA6D,UAAA,OAAA/E,EAAAiI,KAAAjI,EAAA+H,OAGA7G,KAAA6D,UAAAnG,OAAA,KACAsC,KAAA0D,aAAA,KAOA1D,KAAAwG,iBAAAxG,KAAAsD,SACAtD,KAAAyD,YAAA,EAEA,IACAzD,KAAA6D,UAAA,OAAA/E,EAAA8H,MAAA5G,KAAA6D,UAAA,OAAA/E,EAAA+H,MAAA7G,KAAA6D,UAAA,OAAA/E,EAAAgI,KAAAhI,EAAA8H,MAAA5G,KAAA6D,UAAA,OAAA/E,EAAAiI,KAAAjI,EAAA+H,OACA7G,KAAA0D,aAAA,EACA1D,KAAA6D,UAAAnG,OAAA,KACAsC,KAAAuG,YAAAvG,KAAAiE,KACAjE,KAAAwG,iBAAAxG,KAAAsD,UAEA,MAAA2C,IAGA,MACA,QAKA,GAJAnH,EAAAkB,KAAAsD,QAAA4C,GAAAS,UACA3G,KAAAiE,IAAAmC,YACApG,KAAAiE,IAAAG,KAAAtF,EAAA8H,KAAA9H,EAAA+H,KAAA/H,EAAAgI,KAAAhI,EAAA8H,KAAA9H,EAAAiI,KAAAjI,EAAA+H,MACA7G,KAAAiE,IAAAoC,YACArG,KAAAiE,IAAAqC,cAAAtG,KAAAyC,aAAAzC,KAAA0C,cAiBA,OAhBA1C,KAAAuG,YAAAvG,KAAAiE,KACAjE,KAAAwG,iBAAAxG,KAAAsD,SACAmD,EAAAzG,KAAAiE,IAAAnF,EAAA8H,KAAA9H,EAAA+H,KAAA/H,EAAAgI,KAAAhI,EAAA8H,KAAA9H,EAAAiI,KAAAjI,EAAA+H,MACA7G,KAAAiE,IAAAmB,YAAApF,KAAAsD,QAAA4C,GAAAQ,MACA1G,KAAA6D,UAAAnH,KAAA,CAAAoC,EAAA8H,KAAA9H,EAAA+H,KAAA/H,EAAAgI,KAAAhI,EAAA8H,KAAA9H,EAAAiI,KAAAjI,EAAA+H,OACA7G,KAAAyD,YAAA,EACAzD,KAAA2D,WAAAuC,OAEAlG,KAAA0D,cACA1D,KAAA6D,UAAA,OAAA/E,EAAA8H,MAAA5G,KAAA6D,UAAA,OAAA/E,EAAA+H,MAAA7G,KAAA6D,UAAA,OAAA/E,EAAAgI,KAAAhI,EAAA8H,MAAA5G,KAAA6D,UAAA,OAAA/E,EAAAiI,KAAAjI,EAAA+H,OAGA7G,KAAA6D,UAAAnG,OAAA,KACAsC,KAAA0D,aAAA,KAOA1D,KAAAwG,iBAAAxG,KAAAsD,SACAtD,KAAAyD,YAAA,EAEA,IACAzD,KAAA6D,UAAA,OAAA/E,EAAA8H,MAAA5G,KAAA6D,UAAA,OAAA/E,EAAA+H,MAAA7G,KAAA6D,UAAA,OAAA/E,EAAAgI,KAAAhI,EAAA8H,MAAA5G,KAAA6D,UAAA,OAAA/E,EAAAiI,KAAAjI,EAAA+H,OACA7G,KAAA0D,aAAA,EAEA,gBAAA1D,KAAAsD,QAAA4C,GAAA9D,MACApC,KAAAuG,YAAAvG,KAAAiE,KAEAjE,KAAA6D,UAAAnG,OAAA,KACAsC,KAAAwG,iBAAAxG,KAAAsD,UAEA,MAAA2C,OAQA7E,WAnNA,SAmNAkD,GACA,GAAAtE,KAAAwE,cAAA,CAGA,IACAwC,EACAC,EAFAlI,EAAAuF,EAAAI,OAGAsC,EAAA1C,EAAAG,QAAA1F,EAAA4F,WACAsC,EAAA3C,EAAAM,QAAA7F,EAAA8F,UAAAC,SAAAC,gBAAAC,UACA,IAAAkC,EAAAlH,KAAAyC,aAAAuE,EACAG,EAAAnH,KAAA0C,aAAAuE,EACA1C,EAAA,GAEA,GAAAvE,KAAAyD,WAAA,CACA,IAAA3E,EAAAkB,KAAAsD,QAAAtD,KAAA2D,YACAvB,EAAAtD,EAAAsD,KAIAgF,EAAA,GACAC,EAAA,GACA,IAAArH,KAAA0D,YAqFA,OApFA,OAAAtB,GACA,WAeA,MACA,cACApC,KAAAiE,IAAAmC,YACApG,KAAAiE,IAAAmB,YAAAtG,EAAA4H,MACAnC,EAAA,CAAAvE,KAAAiE,IAAA+C,EAAA,GAAAlI,EAAA4G,EAAAuB,EAAA,GAAAnI,EAAA6G,EAAA7G,EAAA4G,EAAA5G,EAAA6G,EAAA3F,KAAAiE,IAAAmB,YAAAhD,GACApC,KAAAuG,YAAAvG,KAAAiE,KACAjE,KAAAqD,YAAA1G,OAAA2I,EAAA,KAAA3I,CAAA2K,EAAA3K,OAAAqJ,EAAA,KAAArJ,CAAA4H,IACAvE,KAAAwG,iBAAAxG,KAAAsD,SACAtD,KAAAqD,YAAAmC,WACAxF,KAAAiE,IAAAI,SACA,MACA,aAEArE,KAAAiE,IAAAmC,YACApG,KAAAiE,IAAAmB,YAAAtG,EAAA4H,MACAnC,EAAA,CAAAvE,KAAAiE,IAAA+C,EAAAC,EAAAnI,EAAA4G,EAAA5G,EAAA6G,EAAA3F,KAAAiE,IAAAmB,YAAAhD,GACApC,KAAAuG,YAAAvG,KAAAiE,KACAjE,KAAAqD,YAAA1G,OAAA2I,EAAA,KAAA3I,CAAA4K,EAAA5K,OAAAqJ,EAAA,KAAArJ,CAAA4H,IACAvE,KAAAwG,iBAAAxG,KAAAsD,SACAtD,KAAAqD,YAAAmC,WACAxF,KAAAiE,IAAAI,SACA,MACA,gBACArE,KAAAiE,IAAAmC,YACApG,KAAAiE,IAAAmB,YAAAtG,EAAA4H,MACAnC,EAAA,CAAAvE,KAAAiE,IAAA+C,EAAA,GAAAlI,EAAA4G,EAAAuB,EAAA,GAAAnI,EAAA6G,EAAA7G,EAAA4G,EAAA5G,EAAA6G,EAAA3F,KAAAiE,IAAAmB,YAAAhD,GACApC,KAAAuG,YAAAvG,KAAAiE,KACAjE,KAAAqD,YAAA1G,OAAA2I,EAAA,KAAA3I,CAAA6K,EAAA7K,OAAAqJ,EAAA,KAAArJ,CAAA4H,IACAvE,KAAAwG,iBAAAxG,KAAAsD,SACAtD,KAAAqD,YAAAmC,WACAxF,KAAAiE,IAAAI,SACA,MACA,WACArE,KAAAiE,IAAAmC,YACApG,KAAAiE,IAAAmB,YAAAtG,EAAA4H,MACAnC,EAAA,CAAAvE,KAAAiE,IAAA+C,EAAAC,EAAAnI,EAAA4G,EAAA5G,EAAA6G,EAAA3F,KAAAiE,IAAAmB,YAAAhD,GACApC,KAAAuG,YAAAvG,KAAAiE,KACAjE,KAAAqD,YAAA1G,OAAA2I,EAAA,KAAA3I,CAAA8K,EAAA9K,OAAAqJ,EAAA,KAAArJ,CAAA4H,IACAvE,KAAAwG,iBAAAxG,KAAAsD,SACAtD,KAAAqD,YAAAmC,WACAxF,KAAAiE,IAAAI,SACA,MACA,cACArE,KAAAiE,IAAAmC,YACApG,KAAAiE,IAAAmB,YAAAtG,EAAA4H,MACAnC,EAAA,CAAAvE,KAAAiE,IAAA+C,EAAAC,EAAAnI,EAAA4G,EAAA5G,EAAA6G,EAAA3F,KAAAiE,IAAAmB,YAAAhD,EAAAtD,EAAA6D,YACA3C,KAAAuG,YAAAvG,KAAAiE,KACAjE,KAAAqD,YAAA1G,OAAA2I,EAAA,KAAA3I,CAAA+K,EAAA/K,OAAAqJ,EAAA,KAAArJ,CAAA4H,IACAvE,KAAAwG,iBAAAxG,KAAAsD,SACAtD,KAAAqD,YAAAmC,WACAxF,KAAAiE,IAAAI,SACA,MACA,mBACArE,KAAAiE,IAAAmC,YACApG,KAAAuG,YAAAvG,KAAAiE,KACAjE,KAAAwG,iBAAAxG,KAAAsD,SACA8D,EAAA,CAAAF,SAAAC,UACAE,EAAA,CAAAvI,EAAA6I,KAAA5B,OAAApJ,OAAAqJ,EAAA,KAAArJ,CAAAmC,EAAA8I,QACA5H,KAAAiE,IAAAmB,YAAAtG,EAAA4H,MACAnC,EAAA,CAAAvE,KAAAiE,IAAAnF,EAAAsD,KAAAtD,EAAA4H,MAAAU,GAAArB,OAAApJ,OAAAqJ,EAAA,KAAArJ,CAAA0K,IACArH,KAAAwD,YAAA7G,OAAA2I,EAAA,KAAA3I,CAAAmJ,EAAAnJ,OAAAqJ,EAAA,KAAArJ,CAAA4H,IACAvE,KAAAwG,iBAAAxG,KAAAwD,aACAxD,KAAAwD,YAAAgC,WACAxF,KAAAiE,IAAAmB,YAAApF,KAAAmC,WACAnC,KAAAiE,IAAAI,SACA,WAMA,CACA,OAAArE,KAAAoC,MACA,WACApC,KAAAuG,YAAAvG,KAAAiE,KACAjE,KAAAwG,iBAAAxG,KAAAsD,SACAtD,KAAAiE,IAAAmC,YACApG,KAAAiE,IAAAmB,YAAApF,KAAAmC,WACAoC,EAAA,CAAAvE,KAAAiE,IAAA+C,EAAAC,EAAA,IAAAjH,KAAAiE,IAAAmB,YAAApF,KAAAoC,MACApC,KAAAqD,YAAA3G,KAAAC,OAAA2I,EAAA,KAAA3I,CAAAkL,EAAAlL,OAAAqJ,EAAA,KAAArJ,CAAA4H,KACA,QAAAjI,EAAA,EAAAA,EAAA0D,KAAAqD,YAAA7G,OAAAF,IACA0D,KAAAqD,YAAA/G,GAAAkJ,WAEA,MACA,cACAxF,KAAAiE,IAAAmC,YACApG,KAAAiE,IAAAmB,YAAApF,KAAAmC,WACAoC,EAAA,CAAAvE,KAAAiE,IAAA+C,EAAAC,EAAAC,EAAAC,EAAAnH,KAAAiE,IAAAmB,YAAApF,KAAAoC,MACApC,KAAAuG,YAAAvG,KAAAiE,KACAjE,KAAAqD,YAAA1G,OAAA2I,EAAA,KAAA3I,CAAA2K,EAAA3K,OAAAqJ,EAAA,KAAArJ,CAAA4H,IACAvE,KAAAwG,iBAAAxG,KAAAsD,SACAtD,KAAAqD,YAAAmC,WACAxF,KAAAiE,IAAAI,SAEA,MACA,aACArE,KAAAiE,IAAAmC,YACApG,KAAAiE,IAAAmB,YAAApF,KAAAmC,WACAoC,EAAA,CAAAvE,KAAAiE,IAAA+C,EAAAC,EAAAC,EAAAC,EAAAnH,KAAAiE,IAAAmB,YAAApF,KAAAoC,MACApC,KAAAuG,YAAAvG,KAAAiE,KACAjE,KAAAqD,YAAA1G,OAAA2I,EAAA,KAAA3I,CAAA4K,EAAA5K,OAAAqJ,EAAA,KAAArJ,CAAA4H,IACAvE,KAAAwG,iBAAAxG,KAAAsD,SACAtD,KAAAqD,YAAAmC,WACAxF,KAAAiE,IAAAI,SACA,MACA,gBACArE,KAAAiE,IAAAmC,YACApG,KAAAiE,IAAAmB,YAAApF,KAAAmC,WACAoC,EAAA,CAAAvE,KAAAiE,IAAA+C,EAAAC,EAAAC,EAAAC,EAAAnH,KAAAiE,IAAAmB,YAAApF,KAAAoC,MACApC,KAAAuG,YAAAvG,KAAAiE,KACAjE,KAAAqD,YAAA1G,OAAA2I,EAAA,KAAA3I,CAAA6K,EAAA7K,OAAAqJ,EAAA,KAAArJ,CAAA4H,IACAvE,KAAAwG,iBAAAxG,KAAAsD,SACAtD,KAAAqD,YAAAmC,WACAxF,KAAAiE,IAAAI,SACA,MACA,WACArE,KAAAiE,IAAAmC,YACApG,KAAAiE,IAAAmB,YAAApF,KAAAmC,WACAoC,EAAA,CAAAvE,KAAAiE,IAAA+C,EAAAC,EAAAC,EAAAC,EAAAnH,KAAAiE,IAAAmB,YAAApF,KAAAoC,MACApC,KAAAuG,YAAAvG,KAAAiE,KACAjE,KAAAqD,YAAA1G,OAAA2I,EAAA,KAAA3I,CAAA8K,EAAA9K,OAAAqJ,EAAA,KAAArJ,CAAA4H,IACAvE,KAAAwG,iBAAAxG,KAAAsD,SACAtD,KAAAqD,YAAAmC,WACAxF,KAAAiE,IAAAI,SACA,MACA,cACArE,KAAAiE,IAAAmC,YACApG,KAAAiE,IAAAmB,YAAApF,KAAAmC,WACAoC,EAAA,CAAAvE,KAAAiE,IAAA+C,EAAAC,EAAAC,EAAAC,EAAAnH,KAAAiE,IAAAmB,YAAApF,KAAAoC,KAAApC,KAAA2C,YACA3C,KAAAuG,YAAAvG,KAAAiE,KACAjE,KAAAqD,YAAA1G,OAAA2I,EAAA,KAAA3I,CAAA+K,EAAA/K,OAAAqJ,EAAA,KAAArJ,CAAA4H,IACAvE,KAAAwG,iBAAAxG,KAAAsD,SACAtD,KAAAqD,YAAAmC,WACAxF,KAAAiE,IAAAI,SACA,MACA,mBACArE,KAAAiE,IAAAmC,YACApG,KAAAuG,YAAAvG,KAAAiE,KACAjE,KAAAwG,iBAAAxG,KAAAuD,gBACAvD,KAAAiE,IAAAmB,YAAApF,KAAAmC,WACAnC,KAAAkD,QAAA,EAEAqB,EADAvE,KAAAmD,QAAA,GAAAnD,KAAA6C,WACA,CAAA7C,KAAAiE,IAAAjE,KAAA6C,WAAA7C,KAAA8C,YAAAoE,GAAAC,EAAAnH,KAAA+C,UAAAiE,EAAAhH,KAAA6C,WAAAoE,EAAAjH,KAAA8C,WAAA9C,KAAAiE,IAAAmB,YAAApF,KAAAoC,MAEA,CAAApC,KAAAiE,IAAA+C,EAAAC,EAAAC,EAAAC,EAAAnH,KAAA+C,UAAA,IAAA/C,KAAAiE,IAAAmB,YAAApF,KAAAoC,MAEApC,KAAAwG,iBAAAxG,KAAAsD,SACAtD,KAAAqD,YAAA1G,OAAA2I,EAAA,KAAA3I,CAAAmL,EAAAnL,OAAAqJ,EAAA,KAAArJ,CAAA4H,IACAvE,KAAAqD,YAAAmC,WACAxF,KAAAiE,IAAAmB,YAAApF,KAAAmC,WACAnC,KAAAiE,IAAAI,SACA,MAGArE,KAAAiE,IAAAoC,eAKA/E,SAxZA,SAwZAgD,GAEAtE,KAAAwE,eAAA,EACA,IACAwC,EACAC,EAFAlI,EAAAuF,EAAAI,OAMA,GAHAsC,EAAA1C,EAAAG,QAAA1F,EAAA4F,WACAsC,EAAA3C,EAAAM,QAAA7F,EAAA8F,UAAAC,SAAAC,gBAAAC,UAEAhF,KAAAkD,OAIA,GAHAlD,KAAAoD,OAAApD,KAAA+H,OAAA/H,KAAAiE,IAAAjE,KAAAgD,SAAA,GAAAiC,EAAAjF,KAAAgD,SAAA,GAAAkC,EAAA8B,EAAAC,GAEAjH,KAAAuD,eAAA7G,KAAAsD,KAAAqD,aACArD,KAAAoD,OAAA,CACA,IAAAmB,EAAA,CAAAvE,KAAAiE,IAAA+C,EAAAC,EAAAjH,KAAAgD,SAAA,GAAAiC,EAAAjF,KAAAgD,SAAA,GAAAkC,EAAAlF,KAAA+C,UAAA/C,KAAAiE,IAAAmB,YAAApF,KAAAoC,MACApC,KAAAuD,eAAA7G,KAAAC,OAAA2I,EAAA,KAAA3I,CAAA4I,EAAAhB,IACA,IAAAvB,EAAA,CAAAhD,KAAAiE,IAAAjE,KAAAuD,eAAA,GAAA0B,EAAAjF,KAAAuD,eAAA,GAAAmC,EAAA1F,KAAAuD,eAAA,GAAA2B,EAAAlF,KAAAuD,eAAA,GAAAoC,EAAA3F,KAAAuD,eAAA,GAAA0B,EAAAjF,KAAAuD,eAAA,GAAA2B,EAAAlF,KAAA+C,WACA6C,EAAAjJ,OAAA2I,EAAA,KAAA3I,CAAA4I,EAAAvC,GACAhD,KAAAZ,IAAA,GACAY,KAAAZ,IAAA1C,KAAAkJ,GACA,QAAAtJ,EAAA,EAAAA,EAAA0D,KAAAuD,eAAA/G,OAAAF,IACA0D,KAAAZ,IAAA1C,KAAAsD,KAAAuD,eAAAjH,IAEA,IAAAuJ,EAAAlJ,OAAA2I,EAAA,KAAA3I,CAAAmJ,EAAA,CAAA9F,KAAAiE,IAAAjE,KAAAoC,KAAApC,KAAAiE,IAAAmB,YAAA,GAAAW,OAAApJ,OAAAqJ,EAAA,KAAArJ,CAAAqD,KAAAZ,OACAY,KAAAsD,QAAA5G,KAAAmJ,GACA7F,KAAA6C,WAAA,EACA7C,KAAA8C,WAAA,EACA9C,KAAA+C,UAAA,EACA/C,KAAAgD,SAAA,GACAhD,KAAAiD,WAAA,GACAjD,KAAAuD,eAAA,GACAvD,KAAAkD,QAAA,EACAlD,KAAAmD,QAAA,EACAnD,KAAAoD,QAAA,MACA,CACApD,KAAAiD,WAAAvG,KAAA,CAAAuI,EAAA+B,EAAA9B,EAAA+B,IACA,IAAAhC,EAAA+C,KAAAC,IAAAD,KAAAE,IAAAlI,KAAAiD,WAAA,GAAAgC,EAAAjF,KAAAgD,SAAA,GAAAiC,GAAA,GACAC,EAAA8C,KAAAC,IAAAD,KAAAE,IAAAlI,KAAAiD,WAAA,GAAAiC,EAAAlF,KAAAgD,SAAA,GAAAkC,GAAA,GACAiD,EAAAH,KAAAI,KAAAnD,EAAAC,GAEA,GAAAiD,EAAA,EAWA,OAVAA,EAAA,EACAnI,KAAAuG,YAAAvG,KAAAiE,KACAjE,KAAA6C,WAAA,EACA7C,KAAA8C,WAAA,EACA9C,KAAA+C,UAAA,EACA/C,KAAAgD,SAAA,GACAhD,KAAAiD,WAAA,GACAjD,KAAAkD,QAAA,EACAlD,KAAAmD,QAAA,OACAnD,KAAAoD,QAAA,GAGApD,KAAAmD,QAAA,EACAnD,KAAA6C,WAAAmE,EACAhH,KAAA8C,WAAAmE,EACAjH,KAAA+C,iBAIA,IACA/C,KAAAoD,OAAApD,KAAA+H,OAAA/H,KAAAiE,IAAAjE,KAAAgD,SAAA,GAAAiC,EAAAjF,KAAAgD,SAAA,GAAAkC,EAAA8B,EAAAC,GACAjH,KAAAoD,SACApD,KAAAuD,eAAA,IAEA,MAAA0C,IAIA,GAAAjG,KAAAyD,WAAA,CACA,GAAAzD,KAAA0D,YAAA,CACA,mBAAA1D,KAAAsD,QAAAtD,KAAA2D,YAAAvB,KACA,GAAApC,KAAAqD,YAAA7G,SACAwD,KAAAsD,QAAA5G,KAAAsD,KAAAqD,aACArD,KAAAqD,YAAA,GACArD,KAAAsD,QAAA5F,OAAAsC,KAAA2D,WAAA,IAEA3D,KAAAyD,YAAA,EACAzD,KAAA0D,aAAA,EACA1D,KAAA6D,UAAA,OACA,CAEA,MAAA7D,KAAAwD,YAAAhH,OAAA,CACA,IAAA4K,EAAApH,KAAAwD,YAAA4D,OACApH,KAAAwD,YAAAmE,IAAA1C,EAAAjF,KAAAwD,YAAAmE,IAAA1C,EAAAmC,EAAAF,OACAlH,KAAAwD,YAAAmE,IAAAzC,EAAAlF,KAAAwD,YAAAmE,IAAAzC,EAAAkC,EAAAD,OACA,QAAAkB,EAAA,EAAAA,EAAArI,KAAAwD,YAAAoE,MAAApL,OAAA6L,IACArI,KAAAwD,YAAAoE,MAAAS,GAAApD,EAAAjF,KAAAwD,YAAAoE,MAAAS,GAAApD,EAAAmC,EAAAF,OACAlH,KAAAwD,YAAAoE,MAAAS,GAAAnD,EAAAlF,KAAAwD,YAAAoE,MAAAS,GAAAnD,EAAAkC,EAAAD,OAEAnH,KAAAwD,YAAA4D,OAAA,CAAAF,OAAA,EAAAC,OAAA,GACAnH,KAAAsD,QAAA5G,KAAAsD,KAAAwD,aACAxD,KAAAsD,QAAA5F,OAAAsC,KAAA2D,WAAA,GACA3D,KAAAwD,YAAA,GAEAxD,KAAAyD,YAAA,EACAzD,KAAA0D,aAAA,EACA1D,KAAA6D,UAAA,GAKA,OAHA7D,KAAAuG,YAAAvG,KAAAiE,UAEAjE,KAAAwG,iBAAAxG,KAAAsD,SAKAtD,KAAA0D,aAAA,MAMA,gBAAA1D,KAAAoC,MACA,GAAApC,KAAAqD,YAAA7G,SACAwD,KAAAsD,QAAA5G,KAAAsD,KAAAqD,aACArD,KAAAqD,YAAA,IAIArD,KAAAuG,YAAAvG,KAAAiE,KACAjE,KAAAwG,iBAAAxG,KAAAuD,gBACAvD,KAAAwG,iBAAAxG,KAAAsD,UAEA9B,YAnhBA,WAohBAxB,KAAAwE,eAAA,GAEAlC,MAthBA,WAuhBAtC,KAAA+D,OAAA/D,KAAAgE,MAAAD,OACA/D,KAAAiE,IAAAjE,KAAA+D,OAAAG,WAAA,MACAlE,KAAAiE,IAAAqE,UAAA,UACAtI,KAAAiE,IAAAmC,YACApG,KAAAiE,IAAAG,KAAA,aACApE,KAAAiE,IAAAsE,OACAvI,KAAAiE,IAAAmB,YAAA,eACApF,KAAAiE,IAAAG,KAAA,aACApE,KAAAiE,IAAAI,SACArE,KAAAiE,IAAAoC,YACArG,KAAA4C,WAAA,GACA5C,KAAA2C,WAAA,EACA3C,KAAA+C,UAAA,EACA/C,KAAAkD,QAAA,EACAlD,KAAAmD,QAAA,EACAnD,KAAAoD,QAAA,EACApD,KAAAyD,YAAA,EACAzD,KAAA0D,aAAA,EACA1D,KAAAgD,SAAA,GACAhD,KAAAiD,WAAA,GACAjD,KAAA6C,WAAA,EACA7C,KAAA8C,WAAA,EACA9C,KAAAsD,QAAA,GACAtD,KAAAoC,KAAA,QAEAmE,YAhjBA,SAgjBAtC,GACAA,EAAAqE,UAAA,UACArE,EAAAmC,YACAnC,EAAAG,KAAA,aACAH,EAAAsE,OACAtE,EAAAmB,YAAA,eACAnB,EAAAG,KAAA,aACAH,EAAAI,SACAJ,EAAAoC,aAEAhE,QA1jBA,SA0jBA9B,GAAA,IAAAiI,EAAAxI,KACAA,KAAAyI,QAAA,cACAC,kBAAA,KACAC,iBAAA,KACAC,aAAA,8BACAC,kBAAA,sBACAC,KAAA,SAAAC,GAAA,IAAAjK,EAAAiK,EAAAjK,MACA0J,EAAAQ,SAAA,CACA5G,KAAA,UACAF,QAAA,YAAApD,IAEA,WAAAyB,IACAiI,EAAA7F,WAAA7D,KAEAmK,MAAA,WACAT,EAAAQ,SAAA,CACA5G,KAAA,OACAF,QAAA,YAOA6F,OAllBA,SAklBA9D,EAAAgB,EAAAC,EAAAQ,EAAAC,GACA1B,EAAAmC,YACAnC,EAAAiF,IAAAjE,EAAAC,EAAA,MAAA8C,KAAAmB,IAEAlF,EAAAoC,YACA,IAAA+C,EAAApB,KAAAI,MAAA1C,EAAAT,IAAAS,EAAAT,IAAAU,EAAAT,IAAAS,EAAAT,IACA,OAAAkE,GAAA,GAMA5C,iBA9lBA,SA8lBAxK,GAEA,IADA,IAAA8C,EAAA9C,EACAM,EAAA,EAAAA,EAAAwC,EAAAtC,OAAAF,IACA,GAAAwC,EAAAxC,aAAA6J,MAAA,CACA,IAAA5B,EAAAzF,EAAAxC,GACA0D,KAAAiE,IAAAkB,OAAAZ,EAAA,GAAAU,EAAAV,EAAA,GAAAW,GACA,QAAA1H,EAAA,EAAAA,EAAA+G,EAAA/H,OAAAgB,IACAwC,KAAAiE,IAAAoF,OAAA9E,EAAA/G,GAAAyH,EAAAV,EAAA/G,GAAA0H,GACAX,EAAA/G,GAAAgI,WACAxF,KAAAiE,IAAAmB,YAAAb,EAAA/G,GAAAkJ,WAGA1G,KAAAiE,IAAAmC,YACAtH,EAAAxC,GAAAkJ,WACAxF,KAAAiE,IAAAmB,YAAAtG,EAAAxC,GAAAoK,MACA1G,KAAAiE,IAAAI,SACArE,KAAAiE,IAAAoC,aAIA9D,KAlnBA,WAmnBAvC,KAAAyD,YAAAzD,KAAA0D,aAMA1D,KAAAsD,QAAA5F,OAAAsC,KAAA2D,WAAA,GACA3D,KAAAuG,YAAAvG,KAAAiE,KACAjE,KAAAwG,iBAAAxG,KAAAsD,SACAtD,KAAAyD,YAAA,EACAzD,KAAA0D,aAAA,EACA1D,KAAA6D,UAAA,IAVA7D,KAAAsJ,QAAA,CACAC,MAAA,OACArH,QAAA,gBAeA2F,aACA,SAAA2B,EAAAvF,EAAAgB,EAAAC,EAAAQ,EAAAC,EAAAe,EAAAtE,GAAAzF,OAAA8M,EAAA,KAAA9M,CAAAqD,KAAAwJ,GAEAxJ,KAAAiE,MACAjE,KAAAiF,IACAjF,KAAAkF,IACAlF,KAAA0F,IACA1F,KAAA2F,IACA3F,KAAAoC,OACApC,KAAA0G,kEAOA1G,KAAAiE,IAAAoF,OAAArJ,KAAAiF,EAAAjF,KAAAkF,GAEAlF,KAAAiE,IAAAI,2CAGA,kBAIAkD,aACA,SAAAmC,EAAAzF,EAAAgB,EAAAC,EAAAQ,EAAAC,EAAAe,EAAAtE,GAAIzF,OAAA8M,EAAA,KAAA9M,CAAAqD,KAAA0J,GACJ1J,KAAAiE,MACAjE,KAAAiF,IACAjF,KAAAkF,IACAlF,KAAA0F,IACA1F,KAAA2F,IACA3F,KAAAoC,OACApC,KAAA0G,kEAIA,IAAAiD,EAAA,SACAC,EAAA5J,KAAA0F,EAAAiE,EACAE,EAAA7J,KAAA2F,EAAAgE,EACA1F,EAAAjE,KAAAiE,IACAA,EAAAmC,YACAnC,EAAAmB,YAAApF,KAAA0G,MACAzC,EAAAkB,OAAAnF,KAAAiF,EAAAjF,KAAA0F,EAAA1F,KAAAkF,GACAjB,EAAA6F,cAAA9J,KAAAiF,EAAAjF,KAAA0F,EAAA1F,KAAAkF,EAAA2E,EAAA7J,KAAAiF,EAAA2E,EAAA5J,KAAAkF,EAAAlF,KAAA2F,EAAA3F,KAAAiF,EAAAjF,KAAAkF,EAAAlF,KAAA2F,GACA1B,EAAA6F,cAAA9J,KAAAiF,EAAA2E,EAAA5J,KAAAkF,EAAAlF,KAAA2F,EAAA3F,KAAAiF,EAAAjF,KAAA0F,EAAA1F,KAAAkF,EAAA2E,EAAA7J,KAAAiF,EAAAjF,KAAA0F,EAAA1F,KAAAkF,GACAjB,EAAA6F,cAAA9J,KAAAiF,EAAAjF,KAAA0F,EAAA1F,KAAAkF,EAAA2E,EAAA7J,KAAAiF,EAAA2E,EAAA5J,KAAAkF,EAAAlF,KAAA2F,EAAA3F,KAAAiF,EAAAjF,KAAAkF,EAAAlF,KAAA2F,GACA1B,EAAA6F,cAAA9J,KAAAiF,EAAA2E,EAAA5J,KAAAkF,EAAAlF,KAAA2F,EAAA3F,KAAAiF,EAAAjF,KAAA0F,EAAA1F,KAAAkF,EAAA2E,EAAA7J,KAAAiF,EAAAjF,KAAA0F,EAAA1F,KAAAkF,GACAjB,EAAAoC,qBAKAmB,aACA,SAAAuC,EAAA9F,EAAAgB,EAAAC,EAAAQ,EAAAC,EAAAe,EAAAtE,GAAIzF,OAAA8M,EAAA,KAAA9M,CAAAqD,KAAA+J,GACJ/J,KAAAiE,MACAjE,KAAAiF,IACAjF,KAAAkF,IACAlF,KAAA0F,IACA1F,KAAA2F,IACA3F,KAAAoC,OACApC,KAAA0G,kEAGA,IAAAzC,EAAAjE,KAAAiE,IACAA,EAAAmC,YACAnC,EAAAG,KAAApE,KAAAiF,EAAAjF,KAAAkF,EAAAlF,KAAA0F,EAAA1F,KAAA2F,GACA1B,EAAAmB,YAAApF,KAAA0G,MACAzC,EAAAI,SACAJ,EAAAoC,8CAGA,IAAAO,EAAAC,EAAAC,EAAAC,EAKA,OAJAH,EAAA5G,KAAAiF,EAAAjF,KAAA0F,EACAoB,EAAA9G,KAAAiF,EACA4B,EAAA7G,KAAAkF,EAAAlF,KAAA2F,EACAoB,EAAA/G,KAAAkF,EACA,CACA0B,OAAAC,OAAAC,OAAAC,iBAOAU,aACA,SAAAuC,EAAA/F,EAAAgB,EAAAC,EAAAQ,EAAAC,EAAAe,EAAAtE,GAAIzF,OAAA8M,EAAA,KAAA9M,CAAAqD,KAAAgK,GACJhK,KAAAiE,MACAjE,KAAAiF,IACAjF,KAAAkF,IACAlF,KAAA0F,IACA1F,KAAA2F,IACA3F,KAAAoC,OACApC,KAAA0G,QACA1G,KAAAiK,QAAA,GACAjK,KAAAkK,QAAA,6DAIA,IAAAjG,EAAAjE,KAAAiE,IACAjE,KAAAiK,QAAA,GACAjK,KAAAkK,QAAA,GACAjG,EAAAmC,YACAnC,EAAAmB,YAAApF,KAAA0G,MACA,QAAApK,EAAA,EAAAA,EAAA,EAAAA,IACA2H,EAAAoF,OAAArB,KAAAmC,KAAA,MAAA7N,GAAA,IAAA0L,KAAAmB,IAAAnJ,KAAA0F,EAAA1F,KAAAiF,GAAA+C,KAAAoC,KAAA,MAAA9N,GAAA,IAAA0L,KAAAmB,IAAAnJ,KAAA2F,EAAA3F,KAAAkF,GACAjB,EAAAoF,OAAArB,KAAAmC,KAAA,MAAA7N,GAAA,IAAA0L,KAAAmB,KAAA,GAAAnJ,KAAA0F,GAAA1F,KAAAiF,GAAA+C,KAAAoC,KAAA,MAAA9N,GAAA,IAAA0L,KAAAmB,KAAA,GAAAnJ,KAAA2F,GAAA3F,KAAAkF,GACAlF,KAAAiK,QAAAvN,KAAAsL,KAAAmC,KAAA,MAAA7N,GAAA,IAAA0L,KAAAmB,IAAAnJ,KAAA0F,EAAA1F,KAAAiF,GACAjF,KAAAiK,QAAAvN,KAAAsL,KAAAmC,KAAA,MAAA7N,GAAA,IAAA0L,KAAAmB,KAAA,GAAAnJ,KAAA0F,GAAA1F,KAAAiF,GACAjF,KAAAkK,QAAAxN,MAAAsL,KAAAoC,KAAA,MAAA9N,GAAA,IAAA0L,KAAAmB,IAAAnJ,KAAA2F,EAAA3F,KAAAkF,GACAlF,KAAAkK,QAAAxN,MAAAsL,KAAAoC,KAAA,MAAA9N,GAAA,IAAA0L,KAAAmB,KAAA,GAAAnJ,KAAA2F,GAAA3F,KAAAkF,GAEAjB,EAAAoG,UACApG,EAAAoC,8CAGA,IAAAO,EAAAC,EAAAC,EAAAC,EACAuD,EAAAtK,KAAAiK,QACAM,EAAAvK,KAAAkK,QAOA,OANAI,EAAAE,EAAAF,GACAC,EAAAC,EAAAD,GACA3D,EAAA0D,EAAA,GACAxD,EAAAwD,IAAA9N,OAAA,GACAqK,EAAA0D,EAAA,GACAxD,EAAAwD,IAAA/N,OAAA,GACA,CACAoK,OAAAC,OAAAC,OAAAC,iBAOAW,aACA,SAAA+C,EAAAxG,EAAAgB,EAAAC,EAAAQ,EAAAC,EAAAe,EAAAtE,EAAAO,GAAIhG,OAAA8M,EAAA,KAAA9M,CAAAqD,KAAAyK,GACJzK,KAAAiE,MACAjE,KAAAiF,IACAjF,KAAAkF,IACAlF,KAAA0F,IACA1F,KAAA2F,IACA3F,KAAAoC,OACApC,KAAA0G,QACA1G,KAAA2C,aACA3C,KAAAiK,QAAA,GACAjK,KAAAkK,QAAA,6DAIA,IAAAjG,EAAAjE,KAAAiE,IACAyG,EAAA1K,KAAA2C,WACAgI,EAAA,EAAA3C,KAAAmB,GAAAuB,EACA1K,KAAAiK,QAAA,GACAjK,KAAAkK,QAAA,GACAjG,EAAA2G,OACA3G,EAAA4G,UAAA7K,KAAAiF,EAAAjF,KAAAkF,GACAjB,EAAAmB,YAAApF,KAAA0G,MACAzC,EAAAkB,OAAA,GAAAnF,KAAA2F,GACA1B,EAAAmC,YACA,QAAA9J,EAAA,EAAAA,EAAAoO,EAAApO,IACA2H,EAAA6G,OAAAH,GACA1G,EAAAoF,OAAA,GAAArJ,KAAA2F,GACA3F,KAAAiK,QAAAvN,MAAAsD,KAAA2F,EAAAqC,KAAAoC,IAAAO,GAAArO,EAAA,IAAA0D,KAAAiF,GACAjF,KAAAkK,QAAAxN,MAAAsD,KAAA2F,EAAAqC,KAAAmC,IAAAQ,GAAArO,EAAA,IAAA0D,KAAAkF,GAEAjB,EAAAoC,YACApC,EAAAoG,4CAGA,IAAAzD,EAAAC,EAAAC,EAAAC,EACAuD,EAAAtK,KAAAiK,QACAM,EAAAvK,KAAAkK,QAOA,OANAI,EAAAE,EAAAF,GACAC,EAAAC,EAAAD,GACA3D,EAAA0D,EAAA,GACAxD,EAAAwD,IAAA9N,OAAA,GACAqK,EAAA0D,EAAA,GACAxD,EAAAwD,IAAA/N,OAAA,GACA,CACAoK,OAAAC,OAAAC,OAAAC,iBAKAO,aACA,SAAAyD,EAAA9G,EAAAgB,EAAAC,EAAAQ,EAAAC,EAAAe,EAAAtE,GAAIzF,OAAA8M,EAAA,KAAA9M,CAAAqD,KAAA+K,GACJ/K,KAAAiE,MACAjE,KAAAiF,IACAjF,KAAAkF,IACAlF,KAAA0F,IACA1F,KAAA2F,IACA3F,KAAAoC,OACApC,KAAA0G,kEAKA,IAAAzC,EAAAjE,KAAAiE,IACAA,EAAAmC,YACAnC,EAAAkB,OAAAnF,KAAAiF,EAAAjF,KAAAkF,GACAjB,EAAAoF,OAAArJ,KAAAiF,EAAAjF,KAAA0F,EAAA1F,KAAAkF,EAAAlF,KAAA2F,GACA1B,EAAAoC,8CAKA,IAAAO,EAAAC,EAAAC,EAAAC,EAKA,OAJAH,EAAAoB,KAAAgD,IAAAhL,KAAAiF,EAAAjF,KAAAiF,EAAAjF,KAAA0F,GACAoB,EAAAkB,KAAAiD,IAAAjL,KAAAiF,EAAAjF,KAAAiF,EAAAjF,KAAA0F,GACAmB,EAAAmB,KAAAgD,IAAAhL,KAAAkF,EAAAlF,KAAAkF,EAAAlF,KAAA2F,GACAoB,EAAAiB,KAAAiD,IAAAjL,KAAAkF,EAAAlF,KAAAkF,EAAAlF,KAAA2F,GACA,CACAiB,OAAAC,OAAAC,OAAAC,iBAMAe,aACA,SAAAoD,EAAAjH,EAAAgB,EAAAC,EAAAQ,EAAAC,EAAA5C,EAAAoI,EAAAC,EAAA1E,EAAAtE,GAAIzF,OAAA8M,EAAA,KAAA9M,CAAAqD,KAAAkL,GACJlL,KAAAiE,MACAjE,KAAAiF,IACAjF,KAAAkF,IACAlF,KAAA0F,IACA1F,KAAA2F,IACA3F,KAAAmL,MACAnL,KAAAoL,MACApL,KAAA+C,YACA/C,KAAAoC,OACApC,KAAA0G,kEAMA,IAAAzC,EAAAjE,KAAAiE,IACAA,EAAAmC,YACAnC,EAAAkB,OAAAnF,KAAAiF,EAAAjF,KAAAkF,GACA,GAAAlF,KAAA+C,UACAkB,EAAAoF,OAAArJ,KAAAmL,IAAAnL,KAAAiF,EAAAjF,KAAAoL,IAAApL,KAAAkF,GAEAjB,EAAAoF,OAAArJ,KAAAiF,EAAAjF,KAAA0F,EAAA1F,KAAAkF,EAAAlF,KAAA2F,GAEA1B,EAAAoC,qBAIAd,aACA,SAAA8F,EAAApH,EAAAgB,EAAAC,EAAAQ,EAAAC,EAAA5C,EAAAoI,EAAAC,EAAA1E,EAAAtE,GAAAzF,OAAA8M,EAAA,KAAA9M,CAAAqD,KAAAqL,GACArL,KAAAiE,MACAjE,KAAAiF,IACAjF,KAAAkF,IACAlF,KAAA0F,IACA1F,KAAA2F,IACA3F,KAAAmL,MACAnL,KAAAoL,MACApL,KAAA+C,YACA/C,KAAAoC,OACApC,KAAA0G,kEAGA1G,KAAAiE,IAAAmC,YACApG,KAAAiE,IAAAkB,OAAAnF,KAAAiF,EAAAjF,KAAAkF,GACAlF,KAAAiE,IAAAoF,OAAArJ,KAAA0F,EAAA1F,KAAA2F,GACA3F,KAAAiE,IAAAoC,qBAIAP,aACA,SAAAwF,EAAArH,EAAA7B,EAAAsE,EAAAU,EAAAO,GAAAhL,OAAA8M,EAAA,KAAA9M,CAAAqD,KAAAsL,GACAtL,KAAAiE,MACAjE,KAAA2H,MAFA,QAAA4D,EAAAC,UAAAhP,OAAAoL,EAAA,IAAAzB,MAAAoF,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAA7D,EAAA6D,EAAA,GAAAD,UAAAC,GAGAzL,KAAA4H,QACA5H,KAAAoC,OACApC,KAAA0G,QAEA1G,KAAAoH,OADA,GAAAA,EACA,CAAAF,OAAA,EAAAC,OAAA,GAEAC,4DAIApH,KAAAiE,IAAAmC,YACApG,KAAAiE,IAAAkB,OAAAnF,KAAA2H,IAAA1C,EAAAjF,KAAAoH,OAAAF,OAAAlH,KAAA2H,IAAAzC,EAAAlF,KAAAoH,OAAAD,QACAnH,KAAAiE,IAAAoF,OAAArJ,KAAA4H,MAAA,GAAA3C,EAAAjF,KAAAoH,OAAAF,OAAAlH,KAAA4H,MAAA,GAAA1C,EAAAlF,KAAAoH,OAAAD,QACA,QAAA7K,EAAA,EAAAA,EAAA0D,KAAA4H,MAAApL,OAAAF,IACA0D,KAAAiE,IAAAoF,OAAArJ,KAAA4H,MAAAtL,GAAA2I,EAAAjF,KAAAoH,OAAAF,OAAAlH,KAAA4H,MAAAtL,GAAA4I,EAAAlF,KAAAoH,OAAAD,QAEAnH,KAAAiE,IAAAoC,8CAOA,IAHA,IAAAO,EAAAC,EAAAC,EAAAC,EACAuD,EAAA,CAAAtK,KAAA2H,IAAA1C,EAAAjF,KAAAoH,OAAAF,QACAqD,EAAA,CAAAvK,KAAA2H,IAAAzC,EAAAlF,KAAAoH,OAAAD,QACA7K,EAAA,EAAAA,EAAA0D,KAAA4H,MAAApL,OAAAF,IACAgO,EAAA5N,KAAAsD,KAAA4H,MAAAtL,GAAA2I,EAAAjF,KAAAoH,OAAAF,QACAqD,EAAA7N,KAAAsD,KAAA4H,MAAAtL,GAAA4I,EAAAlF,KAAAoH,OAAAD,QAQA,OANAmD,EAAAE,EAAAF,GACAC,EAAAC,EAAAD,GACA3D,EAAA0D,EAAA,GACAxD,EAAAwD,IAAA9N,OAAA,GACAqK,EAAA0D,EAAA,GACAxD,EAAAwD,IAAA/N,OAAA,GACA,CACAoK,OAAAC,OAAAC,OAAAC,iBAKA,SAAAyD,EAAAkB,GACA,QAAApP,EAAA,EAAAA,EAAAoP,EAAAlP,OAAAF,IACA,QAAAkB,EAAA,EAAAA,EAAAkO,EAAAlP,OAAA,EAAAF,EAAAkB,IACA,GAAAkO,EAAAlO,GAAAkO,EAAAlO,EAAA,IACA,IAAA+G,EAAAmH,EAAAlO,GACAkO,EAAAlO,GAAAkO,EAAAlO,EAAA,GACAkO,EAAAlO,EAAA,GAAA+G,EAIA,OAAAmH,EAGA,IAAAC,EAAA,SAAA1H,EAAA2H,EAAAC,GAAA,IAAAC,EAAAnP,OAAAoP,EAAA,KAAApP,CAAAiP,EAAA,GAAAI,EAAAF,EAAA,GAAAG,EAAAH,EAAA,GAAAI,EAAAvP,OAAAoP,EAAA,KAAApP,CAAAkP,EAAA,GAAAM,EAAAD,EAAA,GAAAE,EAAAF,EAAA,GAAAG,EAAAb,UAAAhP,OAAA,QAAA8P,IAAAd,UAAA,GAAAA,UAAA,KACAvG,EAAAkH,EAAAH,EACA9G,EAAAkH,EAAAH,EACAM,EAAAvE,KAAAwE,MAAAxE,KAAAI,KAAAnD,IAAAC,KAAAmH,GACAI,EAAAxH,EAAAsH,EACAG,EAAAxH,EAAAqH,EACAtI,EAAAmC,YACA,QAAA9J,EAAA,EAAAA,EAAAiQ,EAAAjQ,IACAA,EAAA,MACA2H,EAAAkB,OAAA6G,EAAAC,GAEAhI,EAAAoF,OAAA2C,EAAAC,GAEAD,GAAAS,EACAR,GAAAS,EAEAzI,EAAAoF,OAAA8C,EAAAC,IAGA3F,EAAA,SAAAxC,EAAA0I,EAAAC,EAAA/L,EAAAC,GAAA,IAAAuL,EAAAb,UAAAhP,OAAA,QAAA8P,IAAAd,UAAA,GAAAA,UAAA,KAUA,OATAvH,EAAAmB,YAAA,eACAuG,EAAA1H,EAAA,CAAA0I,EAAAC,GAAA,CAAAD,EAAA9L,EAAA+L,GAAAP,GACApI,EAAAI,SACAsH,EAAA1H,EAAA,CAAA0I,EAAA9L,EAAA+L,GAAA,CAAAD,EAAA9L,EAAA+L,EAAA9L,GAAAuL,GACApI,EAAAI,SACAsH,EAAA1H,EAAA,CAAA0I,EAAA9L,EAAA+L,EAAA9L,GAAA,CAAA6L,EAAAC,EAAA9L,GAAAuL,GACApI,EAAAI,SACAsH,EAAA1H,EAAA,CAAA0I,EAAAC,EAAA9L,GAAA,CAAA6L,EAAAC,GAAAP,GACApI,EAAAI,UACA,GChjC8UwI,EAAA,cCO9UC,EAAgBnQ,OAAAoQ,EAAA,KAAApQ,CACdkQ,EACApM,EACAgB,GACF,EACA,KACA,WACA,MAIeuL,EAAAF,UClBXG,EAAM,WAAgB,IAAAlN,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,UAA8BE,MAAA,CAAO6M,OAAA,KAAa,CAAA/M,EAAA,UAAeE,MAAA,CAAO8M,KAAA,IAAU,CAAAhN,EAAA,WAAgBE,MAAA,CAAO+M,OAAA,UAAkB,CAAAjN,EAAA,gBAAAA,EAAA,WAAAA,EAAA,OAA6CkN,YAAA,cAAyB,CAAAlN,EAAA,OAAAA,EAAA,aAA4BE,MAAA,CAAOiN,KAAA,kBAAAC,OAAA,IAAqCxM,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAAuC,WAAqB,CAAAvC,EAAAW,GAAA,UAAAP,EAAA,aAAmCE,MAAA,CAAOiN,KAAA,kBAAAC,OAAA,IAAqCxM,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAAwC,UAAoB,CAAAxC,EAAAW,GAAA,kBAAAP,EAAA,aAA2CsN,YAAA,CAAa3M,OAAA,SAAiB,CAAAf,EAAAW,GAAA,oBAAAP,EAAA,UAA0CE,MAAA,CAAO8M,KAAA,IAAU,CAAAhN,EAAA,WAAgBE,MAAA,CAAO+M,OAAA,UAAkB,CAAAjN,EAAA,gBAAAA,EAAA,WAAAA,EAAA,OAA6CsN,YAAA,CAAaC,cAAA,SAAsB,CAAAvN,EAAA,OAAAA,EAAA,aAA4BE,MAAA,CAAOsN,WAAA,EAAAC,KAAA,SAAgC7M,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAA8N,UAAoB,CAAA9N,EAAAW,GAAA,QAAAP,EAAA,aAAiCE,MAAA,CAAOuN,KAAA,SAAe7M,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAA+N,aAAuB,CAAA/N,EAAAW,GAAA,QAAAP,EAAA,aAAiCE,MAAA,CAAOuN,KAAA,SAAe7M,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAAgO,UAAoB,CAAAhO,EAAAW,GAAA,aAAAP,EAAA,OAAAA,EAAA,aAAgDE,MAAA,CAAOuN,KAAA,SAAe7M,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAAiO,eAAyB,CAAAjO,EAAAW,GAAA,QAAAP,EAAA,aAAiCE,MAAA,CAAOuN,KAAA,SAAe7M,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAAkO,YAAsB,CAAAlO,EAAAW,GAAA,QAAAP,EAAA,aAAiCE,MAAA,CAAOuN,KAAA,SAAe7M,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAA0K,aAAuB,CAAA1K,EAAAW,GAAA,SAAAP,EAAA,aAAkCE,MAAA,CAAOuN,KAAA,SAAe7M,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAAmO,kBAA4B,CAAAnO,EAAAW,GAAA,mBAAAP,EAAA,aAA4CsN,YAAA,CAAa3M,OAAA,SAAiB,CAAAf,EAAAW,GAAA,oBAAAP,EAAA,UAA0CE,MAAA,CAAO8M,KAAA,IAAU,CAAAhN,EAAA,WAAgBE,MAAA,CAAO+M,OAAA,UAAkB,CAAAjN,EAAA,gBAAAA,EAAA,WAAmCsN,YAAA,CAAaU,QAAA,UAAmB,CAAAhO,EAAA,OAAYkN,YAAA,cAAyB,CAAAlN,EAAA,OAAYkN,YAAA,mBAA8B,CAAAlN,EAAA,aAAkBkN,YAAA,OAAAe,MAAArO,EAAAsO,SAAA,GAAAhO,MAAA,CAAkDuN,KAAA,QAAc7M,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAAuO,OAAArN,OAA4Bd,EAAA,aAAkBiO,MAAArO,EAAAsO,SAAA,GAAAhO,MAAA,CAA+BuN,KAAA,QAAc7M,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAAuO,OAAArN,OAA4Bd,EAAA,aAAkBiO,MAAArO,EAAAsO,SAAA,GAAAhO,MAAA,CAA+BuN,KAAA,QAAc7M,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAAuO,OAAArN,OAA4Bd,EAAA,aAAkBiO,MAAArO,EAAAsO,SAAA,GAAAhO,MAAA,CAA+BuN,KAAA,QAAc7M,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAAuO,OAAArN,OAA4Bd,EAAA,aAAkBiO,MAAArO,EAAAsO,SAAA,GAAAhO,MAAA,CAA+BuN,KAAA,QAAc7M,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAAuO,OAAArN,QAA4B,GAAAd,EAAA,OAAgBkN,YAAA,mBAA8B,CAAAlN,EAAA,aAAkBiO,MAAArO,EAAAsO,SAAA,GAAAhO,MAAA,CAA+BuN,KAAA,QAAc7M,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAAuO,OAAArN,OAA4Bd,EAAA,aAAkBiO,MAAArO,EAAAsO,SAAA,GAAAhO,MAAA,CAA+BuN,KAAA,QAAc7M,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAAuO,OAAArN,OAA4Bd,EAAA,aAAkBiO,MAAArO,EAAAsO,SAAA,GAAAhO,MAAA,CAA+BuN,KAAA,QAAc7M,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAAuO,OAAArN,OAA4Bd,EAAA,aAAkBiO,MAAArO,EAAAsO,SAAA,GAAAhO,MAAA,CAA+BuN,KAAA,QAAc7M,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAAuO,OAAArN,OAA4Bd,EAAA,aAAkBiO,MAAArO,EAAAsO,SAAA,GAAAhO,MAAA,CAA+BuN,KAAA,QAAc7M,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAAuO,OAAArN,QAA4B,GAAAd,EAAA,OAAgBkN,YAAA,mBAA8B,CAAAlN,EAAA,aAAkBiO,MAAArO,EAAAsO,SAAA,IAAAhO,MAAA,CAAgCuN,KAAA,QAAc7M,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAAuO,OAAArN,OAA4Bd,EAAA,aAAkBiO,MAAArO,EAAAsO,SAAA,IAAAhO,MAAA,CAAgCuN,KAAA,QAAc7M,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAAuO,OAAArN,OAA4Bd,EAAA,aAAkBiO,MAAArO,EAAAsO,SAAA,IAAAhO,MAAA,CAAgCuN,KAAA,QAAc7M,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAAuO,OAAArN,OAA4Bd,EAAA,aAAkBiO,MAAArO,EAAAsO,SAAA,IAAAhO,MAAA,CAAgCuN,KAAA,QAAc7M,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAAuO,OAAArN,OAA4Bd,EAAA,aAAkBiO,MAAArO,EAAAsO,SAAA,IAAAhO,MAAA,CAAgCuN,KAAA,QAAc7M,GAAA,CAAKyM,MAAA,SAAAvM,GAAyB,OAAAlB,EAAAuO,OAAArN,QAA4B,OAAAd,EAAA,aAA0BsN,YAAA,CAAa3M,OAAA,SAAiB,CAAAf,EAAAW,GAAA,6BAClyH6N,EAAe,GCkFnBC,EAAA,CACAnQ,KAAA,UACAwD,MAAA,CACAtB,IAAAuB,QAEAC,QALA,WAMA/B,KAAAwC,QAEAxG,KARA,WASA,OACAyS,IAAA,IACAJ,SAAA,CACA,CACAvP,MAAA,IACA4P,gBAAA,gBAEA,CACA5P,MAAA,IACA4P,gBAAA,sBAEA,CACA5P,MAAA,IACA4P,gBAAA,mBAEA,CACA5P,MAAA,IACA4P,gBAAA,oBAEA,CACA5P,MAAA,IACA4P,gBAAA,sBAGA,CACA5P,MAAA,IACA4P,gBAAA,oBAEA,CACA5P,MAAA,IACA4P,gBAAA,oBAEA,CACA5P,MAAA,IACA4P,gBAAA,qBAEA,CACA5P,MAAA,IACA4P,gBAAA,oBAEA,CACA5P,MAAA,IACA4P,gBAAA,oBAEA,CACA5P,MAAA,KACA4P,gBAAA,oBAEA,CACA5P,MAAA,KACA4P,gBAAA,qBAEA,CACA5P,MAAA,KACA4P,gBAAA,sBAEA,CACA5P,MAAA,KACA4P,gBAAA,sBAEA,CACA5P,MAAA,KACA4P,gBAAA,wBAOA5K,QAAA,CACAtB,KADA,aAIA8L,OAJA,SAIAhK,GACA5C,EAAAiN,MAAA,QAAArK,EAAAsK,cAAAR,MAAAM,kBAIAb,KATA,WAUAnM,EAAAiN,MAAA,gBAEAb,QAZA,WAaApM,EAAAiN,MAAA,mBAEAV,OAfA,WAgBAvM,EAAAiN,MAAA,kBAEAX,UAlBA,WAmBAtM,EAAAiN,MAAA,qBAEAZ,KArBA,WAsBArM,EAAAiN,MAAA,gBAEAlE,QAxBA,WAyBA/I,EAAAiN,MAAA,mBAEAT,aA3BA,WA4BAxM,EAAAiN,MAAA,wBAEArM,MA9BA,WA+BAZ,EAAAiN,MAAA,aAEApM,KAjCA,WAkCAb,EAAAiN,MAAA,cCnMiVE,EAAA,ECQ7UC,aAAYnS,OAAAoQ,EAAA,KAAApQ,CACdkS,EACA5B,EACAsB,GACF,EACA,KACA,WACA,OAIeQ,EAAAD,UCFfE,EAAA,CACA3Q,KAAA,MACA4Q,WAAA,CACAC,WAAAlC,EACA+B,WAEA/S,KANA,WAOA,OACAmT,YAAA,IACAC,aAAA,MAGAtL,QAAA,IC7B8TuL,EAAA,ECQ1TC,aAAY3S,OAAAoQ,EAAA,KAAApQ,CACd0S,EACAvP,EACAU,GACF,EACA,KACA,KACA,OAIe+O,EAAAD,UCbf3N,aAAI6N,IAAIC,KAER,IAAI9N,aAAI,CACN+N,GAAI,OACJC,OAAQ,SAAAC,GAAC,OAAIA,EAAEL,gECVjB,IAAAM,EAAAlS,EAAA,QAAAmS,EAAAnS,EAAA2B,EAAAuQ,GAAqbC,EAAG,qCCAxb,IAAAC,EAAApS,EAAA,QAAAqS,EAAArS,EAAA2B,EAAAyQ,GAAmeC,EAAG",
    "file": "js/app.213ab352.js",
    "sourcesContent": [" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n", "var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('toolBar'),_c('HelloWorld',{attrs:{\"msg\":\"\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }", "var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h1',[_vm._v(_vm._s(_vm.msg))]),_c('canvas',{ref:\"canvas\",attrs:{\"id\":\"canvas\",\"width\":\"800\",\"height\":\"600\"},on:{\"mousedown\":function($event){return _vm.canvasDown($event)},\"mousemove\":function($event){return _vm.canvasMove($event)},\"mouseup\":function($event){return _vm.canvasUp($event)},\"mouseleave\":function($event){return _vm.canvasLeave($event)}}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }", "import Vue from 'vue'\r\n\r\nexport default new Vue", "<template>\n  <div>\n    <h1>{{ msg }}</h1>\n    \n    <canvas\n      id=\"canvas\"\n      width=\"800\"\n      height=\"600\"\n      @mousedown=\"canvasDown($event)\"\n      @mousemove=\"canvasMove($event)\"\n      @mouseup=\"canvasUp($event)\"\n      @mouseleave=\"canvasLeave($event)\"\n      ref=\"canvas\"\n    ></canvas> \n  </div>\n</template>\n\n<script>\n\nimport eventVue from '../components/eventVue'\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  mounted() {\n  eventVue.$on(\"myFun\",(message)=>{   \n      this.colorstyle = message;   \n      }),\n  eventVue.$on(\"type\",(message)=>{   \n      this.type = message;\n      if(message == \"Ploygon\" \n      // || message == \"radomPloygon\"\n      ){\n        this.openbox(message);\n      }   \n      }),\n  eventVue.$on(\"clean\",()=>{   \n      this.clean();\n\n      }),\n  eventVue.$on(\"dele\",()=>{   \n      this.dele();\n\n      }),\n  this.show();\n  },\n  data(){\n    return{\n      colorstyle: 'rgb(0,0,0,1)',\n      clickCanvasX: '',\n      clickCanvasY: '',\n      type: 'line',\n      // clean: false\n      polynumber:0,\n      imageData1:[],\n      tempcanvax:0,\n      tempcanvay:0,\n      tempcount:0,\n      tempdata:[], // 记录任意多边形的初始位置 后添加：包括每个图形的初始坐标（用于判断位移使用）\n      tempupdata:[], //记录第一次后任意多边形每次鼠标up的坐标\n      judge1:false,// 三个皆为判断任意多边形的，这个为判断是否画了起始边\n      judge2:false, // 判断画了起始边后的每次画边\n      judge3:false, // 判断点击UP的位置与移动的距离是否小于一个值（这里设3）\n      alltypetemp:[], // 存放暂时点击流程下的图形\n      alltype:[], // 存放所有图形以不断重新生成\n      allRanPolyData:[], //存放暂时性的未完成的任意多边形\n      ranpolyData:[], // 存放已经完成的任意多边形以供移动操作。\n      clickjudge:false, // 判断是否进入选中状态\n      clickjudge1:false, // 判断进入选中状态后开始移动\n      tempnumber:Number, // 查找选中的是哪个图形\n      clickdata:[], // 选中图形的位置\n      key:[] //// 当绘画完成一个任意多边形时，将这个多边形的信息存入这个key里面，然后根据这个key里的参数再重新生成一个图形，并将其保存进alltype里面。\n    }\n  },\n  methods:{\n  show(){\n      this.canvas = this.$refs.canvas;//指定canvas\n      this.ctx = this.canvas.getContext(\"2d\");//设置2D渲染区域\n      this.ctx.lineWidth = 1;//设置线的宽度\n      this.ctx.rect(0, 0, 800, 600);\n      // this.ctx.lineJoin = 'bevel';\n      this.ctx.stroke();\n\n  },\n  canvasDown(e) {\n      this.canvasMoveUse = true;\n      this.clickCanvasX = e.clientX - e.target.offsetLeft;\n      this.clickCanvasY = e.clientY - e.target.offsetTop + document.documentElement.scrollTop\n      let value;\n      let temp;\n\n      // 判断是否是任意多边形\n      if(this.type !='radomPloygon'){\n        this.judge1 = false;\n      }\n      this.tempdata.push({x:this.clickCanvasX,y:this.clickCanvasY});\n\n      if(this.judge1){\n        this.ctx.moveTo(this.tempcanvax, this.tempcanvay);\n        // 创建多边形后，赋予的点击生成边的功能\n        this.ctx.strokeStyle = this.colorstyle;\n        let temp = [this.ctx, this.tempupdata[this.tempupdata.length-1].x, this.tempupdata[this.tempupdata.length-1].y, this.clickCanvasX, this.clickCanvasY,this.ctx.strokeStyle,this.type];\n        this.alltypetemp = new RadompolyNumber(...temp);\n        this.alltypetemp.generate();\n        this.ctx.stroke();\n        // 自动缝合\n        try {\n          if(this.tempupdata[this.tempupdata.length-1].x==this.clickCanvasX&&this.tempupdata[this.tempupdata.length-1].y==this.clickCanvasY){\n            let temp = [this.ctx, this.tempupdata[this.tempupdata.length-1].x, this.tempupdata[this.tempupdata.length-1].y, this.tempdata[0].x, this.tempdata[0].y,this.tempcount,this.ctx.strokeStyle];\n            this.allRanPolyData.push(new RadompolyNumber(...temp));\n\n            // 重新生成整个任意多边形\n            \n            let tempdata = [this.ctx,this.allRanPolyData[0].x+this.allRanPolyData[0].a,this.allRanPolyData[0].y+this.allRanPolyData[0].b,this.allRanPolyData[0].x,this.allRanPolyData[0].y,this.tempcount,this.ctx.strokeStyle];\n            let newset = new RadompolyNumber(...tempdata);\n            this.key = [];\n            this.key.push(newset);\n            for(let i=1;i<this.allRanPolyData.length;i++){\n              this.key.push(this.allRanPolyData[i]);\n            }\n            let RanPolyType = new RadomPolyType(this.ctx,this.type,this.ctx.strokeStyle,0,...this.key);\n            // let aaa = [this.ctx,this.type,this.ctx.strokeStyle,0,this.key]\n            // console.log(aaa);\n            this.alltype.push(RanPolyType);\n\n            this.tempcanvax = 0;\n            this.tempcanvay = 0;\n            this.tempcount = 0;\n            this.tempdata = [];\n            this.tempupdata = [];\n            this.allRanPolyData = [];\n            this.judge1 = false;\n            this.judge2 = false;\n            this.judge3 = false;\n            return;\n          }\n          \n          // console.log(this.tempupdata[this.tempupdata.length-2].x,this.tempupdata[this.tempupdata.length-2].y);\n        } \n        catch (error) {\n          // console.log(error);\n        }\n      }else{\n        this.ctx.moveTo(this.clickCanvasX, this.clickCanvasY);\n      }\n\n\n        // 遍历每一个插进数组的数据的图像,为每一个生成一个矩形,然后判断点击的这个点是否在这个矩形里面,如果是,那就是可以选择他了\n      for(let i=0 ;i<this.alltype.length;i++){\n          if(this.alltype[i] instanceof Array){\n            continue;\n          }// 线条暂时无法做。。\n          switch(this.alltype[i].type){\n            case 'radius':\n            this.ctx.beginPath();\n            this.ctx.rect(this.alltype[i].x-this.alltype[i].a,this.alltype[i].y+this.alltype[i].b,this.alltype[i].a*2,-this.alltype[i].b*2);\n            this.ctx.closePath();\n            if(this.ctx.isPointInPath(this.clickCanvasX, this.clickCanvasY)){\n              this.cleanScreen(this.ctx);\n              this.generateAgainAll(this.alltype);\n              drawDashRect(this.ctx,this.alltype[i].x-this.alltype[i].a,this.alltype[i].y+this.alltype[i].b,this.alltype[i].a*2,-this.alltype[i].b*2);\n              this.clickdata.push([this.alltype[i].x-this.alltype[i].a,this.alltype[i].y+this.alltype[i].b,this.alltype[i].a*2,-this.alltype[i].b*2]);\n              this.ctx.strokeStyle = this.alltype[i].color;\n              this.clickjudge = true;\n              this.tempnumber = i;\n              if(this.clickjudge1){\n                if(this.clickdata[0][0]==this.alltype[i].x-this.alltype[i].a&&this.clickdata[0][1]==this.alltype[i].y+this.alltype[i].b&&this.clickdata[0][2]==this.alltype[i].a*2&&this.clickdata[0][3]==-this.alltype[i].b*2){\n                  //do something\n                  // console.log('can');\n                }else{\n                this.clickdata.splice(0,1);\n                // console.log('last');\n                this.clickjudge1 = false;\n                }\n              }else{\n                // this.clickjudge = false;\n              }\n              return \n            }\n            else{\n              // 如果不是则清除掉虚线框\n              this.generateAgainAll(this.alltype);\n              this.clickjudge = false;\n            }\n            try {\n              if(this.clickdata[0][0]==this.alltype[i].x-this.alltype[i].a&&this.clickdata[0][1]==this.alltype[i].y+this.alltype[i].b&&this.clickdata[0][2]==this.alltype[i].a*2&&this.clickdata[0][3]==-this.alltype[i].b*2){\n              this.clickjudge1 = false;\n              this.clickdata.splice(0,1);\n              this.cleanScreen(this.ctx);\n              this.generateAgainAll(this.alltype);\n            }\n            } catch (error) {\n              // console.log(error);\n            }\n            \n            break;\n            case 'rectangle':\n            value = this.alltype[i].compare();\n            this.ctx.beginPath();\n            this.ctx.rect(value.minx,value.miny,value.maxx-value.minx,value.maxy-value.miny);\n            this.ctx.closePath();\n            if(this.ctx.isPointInPath(this.clickCanvasX, this.clickCanvasY)){\n              this.cleanScreen(this.ctx);\n              temp = this.alltype[i];\n              this.alltype.splice(i,1);\n              this.generateAgainAll(this.alltype);\n              this.alltype.splice(i,0,temp);\n              drawDashRect(this.ctx,value.minx,value.miny,value.maxx-value.minx,value.maxy-value.miny);\n              this.ctx.strokeStyle = this.alltype[i].color;\n              this.clickdata.push([value.minx,value.miny,value.maxx-value.minx,value.maxy-value.miny]);\n              this.clickjudge = true;\n              this.tempnumber = i;\n              if(this.clickjudge1){\n                if(this.clickdata[0][0]==value.minx&&this.clickdata[0][1]==value.miny&&this.clickdata[0][2]==value.maxx-value.minx&&this.clickdata[0][3]==value.maxy-value.miny){\n                  //do something\n                }else{\n                this.clickdata.splice(0,1);\n                this.clickjudge1 = false;\n                }\n              }\n              return \n            }else{\n              // 如果不是则清除掉虚线框\n              // this.cleanScreen(this.ctx);\n              this.generateAgainAll(this.alltype);\n              this.clickjudge = false;\n            }\n            try {\n              if(this.clickdata[0][0]==value.minx&&this.clickdata[0][1]==value.miny&&this.clickdata[0][2]==value.maxx-value.minx&&this.clickdata[0][3]==value.maxy-value.miny){\n              this.clickjudge1 = false;\n              this.clickdata.splice(0,1);\n              this.cleanScreen(this.ctx);\n              this.generateAgainAll(this.alltype);\n            }\n            } catch (error) {\n              // console.log(error);\n            }\n            break;\n            default:\n            value = this.alltype[i].compare();\n            this.ctx.beginPath();\n            this.ctx.rect(value.minx,value.miny,value.maxx-value.minx,value.maxy-value.miny);\n            this.ctx.closePath();\n            if(this.ctx.isPointInPath(this.clickCanvasX, this.clickCanvasY)){\n              this.cleanScreen(this.ctx);\n              this.generateAgainAll(this.alltype);\n              drawDashRect(this.ctx,value.minx,value.miny,value.maxx-value.minx,value.maxy-value.miny);\n              this.ctx.strokeStyle = this.alltype[i].color;\n              this.clickdata.push([value.minx,value.miny,value.maxx-value.minx,value.maxy-value.miny]);\n              this.clickjudge = true;\n              this.tempnumber = i;\n\n              if(this.clickjudge1){\n                if(this.clickdata[0][0]==value.minx&&this.clickdata[0][1]==value.miny&&this.clickdata[0][2]==value.maxx-value.minx&&this.clickdata[0][3]==value.maxy-value.miny){\n                  //do something\n                }else{\n                this.clickdata.splice(0,1);\n                this.clickjudge1 = false;\n                }\n              }\n              return \n            }else{\n              // 如果不是则清除掉虚线框\n              // this.cleanScreen(this.ctx);\n              this.generateAgainAll(this.alltype);\n              this.clickjudge = false;\n            }\n            try {\n              if(this.clickdata[0][0]==value.minx&&this.clickdata[0][1]==value.miny&&this.clickdata[0][2]==value.maxx-value.minx&&this.clickdata[0][3]==value.maxy-value.miny){\n              this.clickjudge1 = false;\n              // this.cleanScreen(this.ctx);\n              if(this.alltype[i].type!='radomPloygon'){\n                this.cleanScreen(this.ctx);\n              }\n              this.clickdata.splice(0,1);\n              this.generateAgainAll(this.alltype);\n              }\n            } catch (error) {\n              // console.log(error);\n            }\n          }\n      }\n\n      \n    },\n    canvasMove(e) {\n      if (this.canvasMoveUse) {\n        // 只有允许移动时调用\n        // console.log('move');\n        const t = e.target;\n        let canvasX;\n        let canvasY;\n        canvasX = e.clientX - t.offsetLeft;\n        canvasY = e.clientY - t.offsetTop + document.documentElement.scrollTop;\n        let shiftX = this.clickCanvasX - canvasX;\n        let shiftY = this.clickCanvasY - canvasY;\n        let temp = [];\n        \n        if(this.clickjudge){\n          let value = this.alltype[this.tempnumber];\n          let type = value.type;\n          // if(value instanceof Array){\n          //   type = value[0].type;\n          // }\n          let offset = {}; // 任意多边形偏移量\n          let temparray = []; // 移动任意多边形\n          if(this.clickjudge1){\n              switch(type){\n              case 'line':\n              // this.cleanScreen(this.ctx);\n              // this.generateAgainAll(this.alltype);\n              // this.ctx.beginPath();\n              // this.ctx.strokeStyle = this.colorstyle;\n              // for(let i=0;i<value.length;i++){\n              //   templine.push(value[i]);\n              //   templine[i].a = shiftX;\n              //   templine[i].b = shiftY;\n              // }\n              // temp = [this.ctx, canvasX, canvasY,shiftX, shiftY,this.ctx.strokeStyle,this.type];\n              // this.alltypetemp.push(new Line(...temp));\n              // for(let i=0;i<this.alltypetemp.length;i++){\n              //   this.alltypetemp[i].generate();\n              // }\n              break;\n              case 'beeline':\n              this.ctx.beginPath();\n              this.ctx.strokeStyle = value.color;\n              temp = [this.ctx, canvasX-(0.5*value.a), canvasY-(0.5*value.b), value.a, value.b,this.ctx.strokeStyle,type];\n              this.cleanScreen(this.ctx);\n              this.alltypetemp = new Beeline(...temp);\n              this.generateAgainAll(this.alltype);\n              this.alltypetemp.generate();\n              this.ctx.stroke();\n              break;\n              case 'radius':\n              // 生成一个之前一样的圆形;\n              this.ctx.beginPath();\n              this.ctx.strokeStyle = value.color;\n              temp = [this.ctx, canvasX, canvasY, value.a, value.b,this.ctx.strokeStyle,type];\n              this.cleanScreen(this.ctx);\n              this.alltypetemp = new BezierEllipse2(...temp);\n              this.generateAgainAll(this.alltype);\n              this.alltypetemp.generate();\n              this.ctx.stroke();\n              break;\n              case 'rectangle':\n              this.ctx.beginPath();\n              this.ctx.strokeStyle = value.color;\n              temp = [this.ctx, canvasX-(0.5*value.a), canvasY-(0.5*value.b), value.a, value.b,this.ctx.strokeStyle,type];\n              this.cleanScreen(this.ctx);\n              this.alltypetemp = new Rectangle(...temp);\n              this.generateAgainAll(this.alltype);\n              this.alltypetemp.generate();\n              this.ctx.stroke();\n              break;\n              case 'star':\n              this.ctx.beginPath();\n              this.ctx.strokeStyle = value.color;\n              temp = [this.ctx, canvasX, canvasY, value.a, value.b,this.ctx.strokeStyle,type];\n              this.cleanScreen(this.ctx);\n              this.alltypetemp = new Star(...temp);\n              this.generateAgainAll(this.alltype);\n              this.alltypetemp.generate();\n              this.ctx.stroke();\n              break;\n              case 'Ploygon':\n              this.ctx.beginPath();\n              this.ctx.strokeStyle = value.color;\n              temp = [this.ctx, canvasX, canvasY, value.a, value.b,this.ctx.strokeStyle,type,value.polynumber];\n              this.cleanScreen(this.ctx);\n              this.alltypetemp = new Ploygon(...temp);\n              this.generateAgainAll(this.alltype);\n              this.alltypetemp.generate();\n              this.ctx.stroke();\n              break;\n              case 'radomPloygon':\n              this.ctx.beginPath();\n              this.cleanScreen(this.ctx);\n              this.generateAgainAll(this.alltype);\n              offset = {shiftX,shiftY};\n              temparray = [value.fir,...value.other];\n              this.ctx.strokeStyle = value.color;\n              temp = [this.ctx, value.type, value.color, offset,...temparray];\n              this.ranpolyData = new RadomPolyType(...temp);\n              this.generateAgainAll(this.ranpolyData);\n              this.ranpolyData.generate();\n              this.ctx.strokeStyle = this.colorstyle;\n              this.ctx.stroke();\n              break;\n            }\n          }else{\n            return \n          }\n          \n        }else{\n          switch(this.type){\n          case 'line': \n            this.cleanScreen(this.ctx);\n            this.generateAgainAll(this.alltype);\n            this.ctx.beginPath();\n            this.ctx.strokeStyle = this.colorstyle;\n            temp = [this.ctx, canvasX, canvasY,0, 0,this.ctx.strokeStyle,this.type];\n            this.alltypetemp.push(new Line(...temp));\n            for(let i=0;i<this.alltypetemp.length;i++){\n              this.alltypetemp[i].generate();\n            }\n          break;\n          case 'beeline':\n              this.ctx.beginPath();\n              this.ctx.strokeStyle = this.colorstyle;\n              temp = [this.ctx, canvasX, canvasY, shiftX, shiftY,this.ctx.strokeStyle,this.type];\n              this.cleanScreen(this.ctx);\n              this.alltypetemp = new Beeline(...temp);\n              this.generateAgainAll(this.alltype);\n              this.alltypetemp.generate();\n              this.ctx.stroke();\n              // console.log('beeline');\n          break;\n          case 'radius':\n              this.ctx.beginPath();\n              this.ctx.strokeStyle = this.colorstyle;\n              temp = [this.ctx, canvasX, canvasY, shiftX, shiftY,this.ctx.strokeStyle,this.type];\n              this.cleanScreen(this.ctx);\n              this.alltypetemp = new BezierEllipse2(...temp);\n              this.generateAgainAll(this.alltype);\n              this.alltypetemp.generate();\n              this.ctx.stroke();\n          break;\n          case 'rectangle':\n              this.ctx.beginPath();\n              this.ctx.strokeStyle = this.colorstyle;\n              temp = [this.ctx, canvasX, canvasY, shiftX, shiftY,this.ctx.strokeStyle,this.type];\n              this.cleanScreen(this.ctx);\n              this.alltypetemp = new Rectangle(...temp);\n              this.generateAgainAll(this.alltype);\n              this.alltypetemp.generate();\n              this.ctx.stroke();\n          break;\n          case 'star':\n              this.ctx.beginPath();\n              this.ctx.strokeStyle = this.colorstyle;\n              temp = [this.ctx, canvasX, canvasY, shiftX, shiftY,this.ctx.strokeStyle,this.type];\n              this.cleanScreen(this.ctx);\n              this.alltypetemp = new Star(...temp);\n              this.generateAgainAll(this.alltype);\n              this.alltypetemp.generate();\n              this.ctx.stroke();\n          break;\n          case 'Ploygon':\n              this.ctx.beginPath();\n              this.ctx.strokeStyle = this.colorstyle;\n              temp = [this.ctx, canvasX, canvasY, shiftX, shiftY,this.ctx.strokeStyle,this.type,this.polynumber];\n              this.cleanScreen(this.ctx);\n              this.alltypetemp = new Ploygon(...temp);\n              this.generateAgainAll(this.alltype);\n              this.alltypetemp.generate();\n              this.ctx.stroke();\n          break;\n          case 'radomPloygon':\n            this.ctx.beginPath();\n            this.cleanScreen(this.ctx);\n            this.generateAgainAll(this.allRanPolyData);\n            this.ctx.strokeStyle = this.colorstyle;\n            this.judge1 =true;\n            if(this.judge2&&this.tempcanvax!=0){\n              temp = [this.ctx, this.tempcanvax, this.tempcanvay, -shiftX, -shiftY,this.tempcount,canvasX-this.tempcanvax,canvasY-this.tempcanvay,this.ctx.strokeStyle,this.type];\n            }else{\n              temp = [this.ctx, canvasX, canvasY, shiftX, shiftY,this.tempcount,0,0,this.ctx.strokeStyle,this.type];\n            }\n            this.generateAgainAll(this.alltype);\n            this.alltypetemp = new Radompoly(...temp);\n            this.alltypetemp.generate();\n            this.ctx.strokeStyle = this.colorstyle;\n            this.ctx.stroke();\n            break;\n          }\n          \n            this.ctx.closePath();    \n\n        }\n      }\n    },\n    canvasUp(e) {\n      // 如果tempdata与这个点太近，则把tempdata清空？问题时这个点与tempdata的关系：用于判断\n      this.canvasMoveUse = false;\n      const t = e.target;\n      let canvasX;\n      let canvasY;\n      canvasX = e.clientX - t.offsetLeft;\n      canvasY = e.clientY - t.offsetTop + document.documentElement.scrollTop;\n      // \n      if(this.judge1){\n        this.judge3 = this.sucker(this.ctx,this.tempdata[0].x, this.tempdata[0].y,canvasX,canvasY);\n        // 自动吸附到起始点\n        this.allRanPolyData.push(this.alltypetemp);\n        if(this.judge3){\n          let temp = [this.ctx, canvasX, canvasY, this.tempdata[0].x, this.tempdata[0].y,this.tempcount,this.ctx.strokeStyle,this.type];\n          this.allRanPolyData.push(new RadompolyNumber(...temp));\n          let tempdata = [this.ctx,this.allRanPolyData[0].x+this.allRanPolyData[0].a,this.allRanPolyData[0].y+this.allRanPolyData[0].b,this.allRanPolyData[0].x,this.allRanPolyData[0].y,this.tempcount];\n          let newset = new RadompolyNumber(...tempdata);\n          this.key = [];\n          this.key.push(newset);\n          for(let i=1;i<this.allRanPolyData.length;i++){\n            this.key.push(this.allRanPolyData[i]);\n          }\n          let RanPolyType = new RadomPolyType(this.ctx,this.type,this.ctx.strokeStyle,0,...this.key);\n          this.alltype.push(RanPolyType);\n          this.tempcanvax = 0;\n          this.tempcanvay = 0;\n          this.tempcount = 0;\n          this.tempdata = [];\n          this.tempupdata = [];\n          this.allRanPolyData = [];\n          this.judge1 = false;\n          this.judge2 = false;\n          this.judge3 = false;\n        }else{\n          this.tempupdata.push({x:canvasX,y:canvasY});  // 每次点击完毕，记录这个点\n          let x = Math.pow(Math.abs(this.tempupdata[0].x-this.tempdata[0].x),2);\n          let y = Math.pow(Math.abs(this.tempupdata[0].y-this.tempdata[0].y),2);\n          let isshort = Math.sqrt(x+y); \n          // 如果第一个点击完毕的点与起始点太近，则重新画\n          if(isshort<5){\n            isshort = 0;\n            this.cleanScreen(this.ctx); \n            this.tempcanvax = 0;\n            this.tempcanvay = 0;\n            this.tempcount = 0;\n            this.tempdata = [];\n            this.tempupdata = [];\n            this.judge1 = false;\n            this.judge2 = false;\n            this.judge3 = false;\n            return;\n          }\n          this.judge2 = true;\n          this.tempcanvax = canvasX; // 赋值当前up的点\n          this.tempcanvay = canvasY;\n          this.tempcount++;\n        }\n        \n      }else{\n        try {\n        this.judge3 = this.sucker(this.ctx,this.tempdata[0].x, this.tempdata[0].y,canvasX,canvasY);\n          if(this.judge3){\n          this.allRanPolyData = [];\n          }\n        } catch (error) {\n          // console.log('这里会因为前面把东西都清空的原因而无法执行上面的try');\n        }\n      }\n        if(this.clickjudge){\n          if(this.clickjudge1){\n            if(this.alltype[this.tempnumber].type!='radomPloygon'){\n              if(this.alltypetemp.length!=0){\n                this.alltype.push(this.alltypetemp);\n                this.alltypetemp = [];\n                this.alltype.splice(this.tempnumber,1);\n              }\n              this.clickjudge = false;\n              this.clickjudge1 = false;\n              this.clickdata = [];\n            }else{\n              // 偏移后需要改变原来的点以存进栈里\n              if(this.ranpolyData.length!=0){\n                let offset = this.ranpolyData.offset;\n                this.ranpolyData.fir.x = this.ranpolyData.fir.x - offset.shiftX;\n                this.ranpolyData.fir.y = this.ranpolyData.fir.y - offset.shiftY;\n                for(let i=0;i<this.ranpolyData.other.length;i++){\n                  this.ranpolyData.other[i].x = this.ranpolyData.other[i].x - offset.shiftX;\n                  this.ranpolyData.other[i].y = this.ranpolyData.other[i].y - offset.shiftY;\n                }\n                this.ranpolyData.offset = {shiftX:0,shiftY:0};\n                this.alltype.push(this.ranpolyData);\n                this.alltype.splice(this.tempnumber,1);\n                this.ranpolyData = [];\n              }\n              this.clickjudge = false;\n              this.clickjudge1 = false;\n              this.clickdata = [];\n            }\n            this.cleanScreen(this.ctx);\n            // this.generateAgainAll(this.allRanPolyData);\n            this.generateAgainAll(this.alltype);\n            return\n          }else{\n            // console.log('clickjudge1');\n            // console.log(this.alltype);\n            this.clickjudge1 = true;\n            return\n          }\n            \n            \n        }\n      if(this.type!='radomPloygon'){\n          if(this.alltypetemp.length!=0){\n            this.alltype.push(this.alltypetemp);\n            this.alltypetemp = [];\n          }\n          \n      }\n      this.cleanScreen(this.ctx);\n      this.generateAgainAll(this.allRanPolyData);\n      this.generateAgainAll(this.alltype);\n    },\n    canvasLeave() {\n      this.canvasMoveUse = false; \n    },\n    clean() {\n      this.canvas = this.$refs.canvas;//指定canvas\n      this.ctx = this.canvas.getContext(\"2d\");//设置2D渲染区域\n      this.ctx.fillStyle=\"#ffffff\";  \n      this.ctx.beginPath(); \n      this.ctx.rect(0, 0, 800, 600);\n      this.ctx.fill();\n      this.ctx.strokeStyle = \"rgb(0,0,0,1)\";\n      this.ctx.rect(0, 0, 800, 600);\n      this.ctx.stroke();\n      this.ctx.closePath();  \n      this.imageData1 = [];\n      this.polynumber = 0;\n      this.tempcount = 0;\n      this.judge1 = false;\n      this.judge2 = false;\n      this.judge3 = false;\n      this.clickjudge = false;\n      this.clickjudge1 = false;\n      this.tempdata = [];\n      this.tempupdata = [];\n      this.tempcanvax = 0;\n      this.tempcanvay = 0;\n      this.alltype = [];\n      this.type = 'line';\n    },\n    cleanScreen(ctx) {\n    ctx.fillStyle=\"#ffffff\";  \n    ctx.beginPath();  \n    ctx.rect(0, 0, 800, 600);\n    ctx.fill();\n    ctx.strokeStyle = \"rgb(0,0,0,1)\";\n    ctx.rect(0, 0, 800, 600);\n    ctx.stroke();\n    ctx.closePath();\n    },\n    openbox(msg) {\n      this.$prompt('请输入边数', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          inputPattern: /^((0?[3-9])|((1)[0-9])|20)$/,\n          inputErrorMessage: '请输入大于等于3小于等于20的整数'\n        }).then(({ value }) => {\n          this.$message({\n            type: 'success',\n            message: '你输入的边数是: ' + value,\n          });\n          if(msg == 'Ploygon') {\n            this.polynumber = value;\n          }\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '取消输入'\n          });\n        });\n    },\n    \n    \n    //x,y:开始绘制的点，a,b:最后停止的点\n    sucker(ctx,x,y,a,b){\n      ctx.beginPath();\n    ctx.arc(x,y,5,0,Math.PI * 2);\n    // ctx.stroke();\n    ctx.closePath();\n    let dis = Math.sqrt((a - x) * (a - x) + (b - y) * (b - y));\n    if(dis <= 5){\n        return true;\n    }\n    return false;\n    },\n    \n    generateAgainAll(data){\n      let value = data;\n      for(let i=0;i<value.length;i++){\n        if(value[i] instanceof Array){\n          let temp = value[i];\n          this.ctx.moveTo(temp[0].x,temp[0].y);\n          for(let j=0;j<temp.length;j++){\n            this.ctx.lineTo(temp[j].x, temp[j].y);\n            temp[j].generate();\n            this.ctx.strokeStyle = temp[j].color;\n          }\n        }else{\n          this.ctx.beginPath();\n          value[i].generate();\n          this.ctx.strokeStyle = value[i].color;\n          this.ctx.stroke();\n          this.ctx.closePath();\n        }        \n      }\n    },\n    dele(){\n      if(!this.clickjudge&&!this.clickjudge1){\n        this.$notify({\n          title: '删除图形',\n          message: '您未选定图形删除'\n        });\n      }else{\n        this.alltype.splice(this.tempnumber,1);\n        this.cleanScreen(this.ctx);\n        this.generateAgainAll(this.alltype);\n        this.clickjudge = false;\n        this.clickjudge1 = false;\n        this.clickdata = [];\n        // console.log(this.tempnumber);\n      }\n    }\n  }\n}\n\nclass Line{\n  constructor(ctx, x, y,a,b,color,type) {\n    // this.ctx, canvasX, canvasY,this.ctx.strokeStyle,this.type\n          this.ctx = ctx;\n          this.x = x;\n          this.y = y;\n          this.a = a;\n          this.b = b;\n          this.type = type;\n          this.color = color;\n        }\n        generate(){\n          // if(this.a!=0){\n          //   this.ctx.lineTo(this.x-this.a, this.y-this.b);\n          //   // this.ctx.lineTo(this.x, this.y);\n          // }else{\n          this.ctx.lineTo(this.x, this.y);\n          // }\n          this.ctx.stroke();\n        }\n        compare() {\n          return 1;\n        }\n}\n\nclass BezierEllipse2{\n        constructor(ctx, x, y, a, b,color,type) {\n          this.ctx = ctx;\n          this.x = x;\n          this.y = y;\n          this.a = a;\n          this.b = b;\n          this.type = type;\n          this.color = color;\n\n        }\n        generate(){\n          let k = .5522848;\n          let ox = this.a * k; // 水平控制点偏移量\n          let oy = this.b * k; // 垂直控制点偏移量\n          let ctx = this.ctx;\n          ctx.beginPath();\n          ctx.strokeStyle = this.color;\n          ctx.moveTo(this.x - this.a, this.y);\n          ctx.bezierCurveTo(this.x - this.a, this.y - oy, this.x - ox, this.y - this.b, this.x, this.y - this.b);\n          ctx.bezierCurveTo(this.x + ox, this.y - this.b, this.x + this.a, this.y - oy, this.x + this.a, this.y);\n          ctx.bezierCurveTo(this.x + this.a, this.y + oy, this.x + ox, this.y + this.b, this.x, this.y + this.b);\n          ctx.bezierCurveTo(this.x - ox, this.y + this.b, this.x - this.a, this.y + oy, this.x - this.a, this.y);\n          ctx.closePath();\n        }\n        // ctx.stroke();\n    }\n\nclass Rectangle{\n        constructor(ctx, x, y, a, b,color,type) {\n          this.ctx = ctx;\n          this.x = x;\n          this.y = y;\n          this.a = a;\n          this.b = b;\n          this.type = type;\n          this.color = color;\n        }\n        generate(){\n          let ctx = this.ctx;\n          ctx.beginPath();\n          ctx.rect(this.x,this.y,this.a,this.b)\n          ctx.strokeStyle = this.color;\n          ctx.stroke();\n          ctx.closePath();\n        }\n        compare(){\n          let minx,miny,maxx,maxy;\n          minx = this.x+this.a;\n          maxx = this.x;\n          miny = this.y+this.b;\n          maxy = this.y;\n          return{\n            minx,miny,maxx,maxy\n          }\n        \n        }\n        // ctx.stroke();\n    }\n\nclass Star{\n        constructor(ctx, x, y, a, b,color,type) {\n          this.ctx = ctx;\n          this.x = x;\n          this.y = y;\n          this.a = a;\n          this.b = b;\n          this.type = type;\n          this.color = color;\n          this.offsetx = [];\n          this.offsety = [];\n        }\n        generate(){\n          //设置是个顶点的坐标，根据顶点制定路径   \n          let ctx = this.ctx;\n          this.offsetx = [];\n          this.offsety = [];\n          ctx.beginPath(); \n          ctx.strokeStyle = this.color;\n          for (let i = 0; i < 6; i++) {\n              ctx.lineTo(Math.cos((18 + i * 72) / 180 * Math.PI)*this.a+this.x,-Math.sin((18 + i * 72) / 180 * Math.PI)*this.b+this.y);\n              ctx.lineTo(Math.cos((54+i*72)/180*Math.PI)*(2/5*this.a)+this.x,-Math.sin((54+i*72)/180*Math.PI)*(2/5*this.b)+this.y);\n              this.offsetx.push(Math.cos((18 + i * 72) / 180 * Math.PI)*this.a+this.x);\n              this.offsetx.push(Math.cos((54+i*72)/180*Math.PI)*(2/5*this.a)+this.x);\n              this.offsety.push(-Math.sin((18 + i * 72) / 180 * Math.PI)*this.b+this.y);\n              this.offsety.push(-Math.sin((54+i*72)/180*Math.PI)*(2/5*this.b)+this.y);\n          }\n          ctx.restore();\n          ctx.closePath();\n        }\n        compare(){\n          let minx,miny,maxx,maxy;\n          let tempx = this.offsetx;\n          let tempy = this.offsety;\n          tempx = maopao(tempx);\n          tempy = maopao(tempy);\n          minx = tempx[0];\n          maxx = tempx[tempx.length-1];\n          miny = tempy[0];\n          maxy = tempy[tempy.length-1];\n          return{\n            minx,miny,maxx,maxy\n          }\n        \n        }\n        // ctx.stroke();\n    }\n\nclass Ploygon{\n        constructor(ctx, x, y, a, b,color,type,polynumber) {\n          this.ctx = ctx;\n          this.x = x;\n          this.y = y;\n          this.a = a;\n          this.b = b;\n          this.type = type;\n          this.color = color;\n          this.polynumber = polynumber;\n          this.offsetx = [];\n          this.offsety = [];\n        }\n        generate(){\n          //设置是个顶点的坐标，根据顶点制定路径   \n          let ctx = this.ctx;\n          let num = this.polynumber;\n          let ang = Math.PI*2/num //旋转的角度\n          this.offsetx = [];\n          this.offsety = [];\n          ctx.save();\n          ctx.translate(this.x,this.y);\n          ctx.strokeStyle = this.color;\n          ctx.moveTo(0,-this.b);\n          ctx.beginPath();\n          for(let i=0;i<num;i++){\n            ctx.rotate(ang);\n            ctx.lineTo(0,-this.b);\n            this.offsetx.push((-this.b*Math.sin(ang*(i+1)))+this.x);\n            this.offsety.push((-this.b*Math.cos(ang*(i+1)))+this.y);\n          }\n          ctx.closePath();\n          ctx.restore();\n        }\n        compare(){\n          let minx,miny,maxx,maxy;\n          let tempx = this.offsetx;\n          let tempy = this.offsety;\n          tempx = maopao(tempx);\n          tempy = maopao(tempy);\n          minx = tempx[0];\n          maxx = tempx[tempx.length-1];\n          miny = tempy[0];\n          maxy = tempy[tempy.length-1];\n          return{\n            minx,miny,maxx,maxy\n          }\n        }\n    }\n\nclass Beeline{\n        constructor(ctx, x, y, a, b,color,type) {\n          this.ctx = ctx;\n          this.x = x;\n          this.y = y;\n          this.a = a;\n          this.b = b;\n          this.type = type;\n          this.color = color;\n        }\n        generate(){\n          //设置是个顶点的坐标，根据顶点制定路径   \n\n          let ctx = this.ctx;\n          ctx.beginPath();\n          ctx.moveTo(this.x,this.y);\n          ctx.lineTo(this.x+this.a,this.y+this.b);\n          ctx.closePath();\n        }\n        \n        // 按偏移的角度生成一个高度为5的长方形来\n        compare(){\n          let minx,miny,maxx,maxy;\n          minx = Math.min(this.x,this.x+this.a);\n          maxx = Math.max(this.x,this.x+this.a);\n          miny = Math.min(this.y,this.y+this.b);\n          maxy = Math.max(this.y,this.y+this.b);\n          return{\n            minx,miny,maxx,maxy\n          }\n        }\n  \n}\n\nclass Radompoly{\n        constructor(ctx, x, y, a, b,tempcount,mox,moy,color,type) {\n          this.ctx = ctx;\n          this.x = x;\n          this.y = y;\n          this.a = a;\n          this.b = b;\n          this.mox = mox;\n          this.moy = moy;\n          this.tempcount = tempcount;\n          this.type = type;\n          this.color = color;\n        }\n        generate(){\n          //设置是个顶点的坐标，根据顶点制定路径   \n        \n\n          let ctx = this.ctx;\n            ctx.beginPath();\n            ctx.moveTo(this.x,this.y);\n            if(this.tempcount!=0){\n              ctx.lineTo(this.mox+this.x,this.moy+this.y);\n            }else{\n              ctx.lineTo(this.x+this.a,this.y+this.b);\n            }\n            ctx.closePath();\n        }\n}\n\nclass RadompolyNumber{\n  constructor(ctx, x, y, a, b,tempcount,mox,moy,color,type) {\n          this.ctx = ctx;\n          this.x = x;\n          this.y = y;\n          this.a = a;\n          this.b = b;\n          this.mox = mox;\n          this.moy = moy;\n          this.tempcount = tempcount;\n          this.type = type;\n          this.color = color;\n        }\n         generate(){\n          this.ctx.beginPath();\n          this.ctx.moveTo(this.x,this.y);\n          this.ctx.lineTo(this.a, this.b);\n          this.ctx.closePath();\n        }\n}\n\nclass RadomPolyType{\n  constructor(ctx,type,color,offset,fir,...other) {\n          this.ctx = ctx;\n          this.fir = fir;\n          this.other = other;\n          this.type = type;\n          this.color = color;\n          if(offset==0){\n            this.offset = {shiftX:0,shiftY:0};\n          }else{\n            this.offset = offset;\n          }\n        }\n         generate(){\n          this.ctx.beginPath();\n          this.ctx.moveTo(this.fir.x-this.offset.shiftX,this.fir.y-this.offset.shiftY);\n          this.ctx.lineTo(this.other[0].x-this.offset.shiftX, this.other[0].y-this.offset.shiftY);\n          for(let i=1;i<this.other.length;i++){\n            this.ctx.lineTo(this.other[i].x-this.offset.shiftX, this.other[i].y-this.offset.shiftY);\n          }\n          this.ctx.closePath();\n        }\n        compare(){\n          // 比较大小\n          let minx,miny,maxx,maxy;\n          let tempx = [this.fir.x-this.offset.shiftX];\n          let tempy = [this.fir.y-this.offset.shiftY];\n          for (let i = 0; i < this.other.length; i++) {\n            tempx.push(this.other[i].x-this.offset.shiftX);\n            tempy.push(this.other[i].y-this.offset.shiftY);\n          }\n          tempx = maopao(tempx);\n          tempy = maopao(tempy);\n          minx = tempx[0];\n          maxx = tempx[tempx.length-1];\n          miny = tempy[0];\n          maxy = tempy[tempy.length-1];\n          return{\n            minx,miny,maxx,maxy\n          }\n        }\n}\n\nfunction maopao(arr){\n  for(let i=0;i<arr.length;i++){\n    for(let j=0;j<arr.length-1-i;j++){\n        if(arr[j]>arr[j+1]){\n            let temp = arr[j];\n            arr[j]=arr[j+1];\n            arr[j+1]=temp\n        }\n    }\n  }\n  return arr;\n}\n\nconst drawDashLine = (ctx,[x1, y1], [x2, y2], step = 5) => {\n    const x = x2 - x1,\n        y = y2 - y1,\n        count = Math.floor(Math.sqrt(x * x + y * y) / step),\n        xv = x / count,\n        yv = y / count;\n    ctx.beginPath();\n    for (let i = 0; i < count; i ++) {\n        if (i % 2 === 0) {\n            ctx.moveTo(x1, y1);\n        } else {\n            ctx.lineTo(x1, y1);\n        }\n      x1 += xv;\n      y1 += yv;\n    }\n    ctx.lineTo(x2, y2);\n}\n\nconst drawDashRect = (ctx,left, top, width, height, step = 5) => {\n    ctx.strokeStyle = 'rgb(0,0,0,1)';\n    drawDashLine(ctx,[left, top], [left + width, top], step);\n    ctx.stroke();\n    drawDashLine(ctx,[left + width, top], [left + width, top + height], step);\n    ctx.stroke();\n    drawDashLine(ctx,[left + width, top + height], [left, top + height], step);\n    ctx.stroke();\n    drawDashLine(ctx,[left, top + height], [left, top], step);\n    ctx.stroke();\n    return true;\n}\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n", "import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./main.vue?vue&type=script&lang=js&\"", "import { render, staticRenderFns } from \"./main.vue?vue&type=template&id=de4432b0&scoped=true&\"\nimport script from \"./main.vue?vue&type=script&lang=js&\"\nexport * from \"./main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"de4432b0\",\n  null\n  \n)\n\nexport default component.exports", "var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-row',{attrs:{\"gutter\":12}},[_c('el-col',{attrs:{\"span\":6}},[_c('el-card',{attrs:{\"shadow\":\"hover\"}},[_c('el-container',[_c('el-main',[_c('div',{staticClass:\"flexColumn\"},[_c('div',[_c('el-button',{attrs:{\"icon\":\"el-icon-smoking\",\"circle\":\"\"},on:{\"click\":function($event){return _vm.clean()}}},[_vm._v(\"清空画布\")]),_c('el-button',{attrs:{\"icon\":\"el-icon-smoking\",\"circle\":\"\"},on:{\"click\":function($event){return _vm.dele()}}},[_vm._v(\"删除图形\")])],1)])]),_c('el-footer',{staticStyle:{\"height\":\"30px\"}},[_vm._v(\"工具\")])],1)],1)],1),_c('el-col',{attrs:{\"span\":8}},[_c('el-card',{attrs:{\"shadow\":\"hover\"}},[_c('el-container',[_c('el-main',[_c('div',{staticStyle:{\"line-height\":\"16px\"}},[_c('div',[_c('el-button',{attrs:{\"autofocus\":true,\"size\":\"small\"},on:{\"click\":function($event){return _vm.line()}}},[_vm._v(\"线条\")]),_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.beeline()}}},[_vm._v(\"直线\")]),_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.star()}}},[_vm._v(\"五角星\")])],1),_c('div',[_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.rectangle()}}},[_vm._v(\"矩形\")]),_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.radius()}}},[_vm._v(\"圆形\")]),_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.Ploygon()}}},[_vm._v(\"多边形\")]),_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.radomPloygon()}}},[_vm._v(\"任意多边形\")])],1)])]),_c('el-footer',{staticStyle:{\"height\":\"30px\"}},[_vm._v(\"形状\")])],1)],1)],1),_c('el-col',{attrs:{\"span\":6}},[_c('el-card',{attrs:{\"shadow\":\"hover\"}},[_c('el-container',[_c('el-main',{staticStyle:{\"padding\":\"8.5px\"}},[_c('div',{staticClass:\"colorstyle\"},[_c('div',{staticClass:\"colorstylechild\"},[_c('el-button',{staticClass:\"test\",style:(_vm.styleObj[0]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[1]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[2]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[3]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[4]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}})],1),_c('div',{staticClass:\"colorstylechild\"},[_c('el-button',{style:(_vm.styleObj[5]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[6]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[7]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[8]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[9]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}})],1),_c('div',{staticClass:\"colorstylechild\"},[_c('el-button',{style:(_vm.styleObj[10]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[11]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[12]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[13]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[14]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}})],1)])]),_c('el-footer',{staticStyle:{\"height\":\"30px\"}},[_vm._v(\"颜色\")])],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }", "<template>\r\n  <div>\r\n    <el-row :gutter=\"12\">\r\n    <el-col :span=\"6\">\r\n        <el-card shadow=\"hover\">\r\n        <el-container>\r\n        <el-main>\r\n          <div class=\"flexColumn\">\r\n            <!-- <div><el-button icon=\"el-icon-edit\" circle>铅笔</el-button>\r\n              </div>\r\n            <div><el-button icon=\"el-icon-help\" circle>橡皮擦</el-button>\r\n              </div> -->\r\n            <div>\r\n              <el-button @click=\"clean()\" icon=\"el-icon-smoking\" circle>清空画布</el-button>\r\n              <el-button @click=\"dele()\" icon=\"el-icon-smoking\" circle>删除图形</el-button>\r\n              </div>\r\n        </div>\r\n        </el-main>\r\n        <el-footer style=\"height:30px;\">工具</el-footer>\r\n      </el-container>\r\n        </el-card>\r\n    </el-col>\r\n    <el-col :span=\"8\">\r\n        <el-card shadow=\"hover\">\r\n        <el-container>\r\n        <el-main>\r\n          <div style=\"line-height: 16px;\">\r\n          <div>\r\n          <el-button :autofocus=\"true\" @click=\"line()\" size=\"small\">线条</el-button>\r\n          <el-button @click=\"beeline()\" size=\"small\">直线</el-button>\r\n          <el-button @click=\"star()\" size=\"small\">五角星</el-button>\r\n          </div>\r\n          <div>\r\n            <el-button @click=\"rectangle()\" size=\"small\">矩形</el-button>\r\n          <el-button @click=\"radius()\" size=\"small\">圆形</el-button>\r\n          <el-button @click=\"Ploygon()\" size=\"small\">多边形</el-button>\r\n          <el-button @click=\"radomPloygon()\" size=\"small\">任意多边形</el-button>\r\n          </div>\r\n          </div>\r\n        </el-main>\r\n        <el-footer style=\"height:30px;\">形状</el-footer>\r\n      </el-container>\r\n        </el-card>\r\n    </el-col>\r\n    <el-col :span=\"6\">\r\n        <el-card shadow=\"hover\">\r\n        <el-container>\r\n        <el-main style=\"padding:8.5px;\">\r\n          <div class=\"colorstyle\">\r\n            <div class=\"colorstylechild\"> \r\n          <el-button size=\"mini\" class=\"test\" @click=\"color1($event)\" :style=\"styleObj[0]\" ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[1]\" ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[2]\" ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[3]\" ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[4]\" ></el-button>\r\n          </div>\r\n            <div class=\"colorstylechild\">\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[5]\" ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[6]\" ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[7]\" ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[8]\" ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[9]\" ></el-button>\r\n          </div>\r\n          <div class=\"colorstylechild\">\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[10]\" ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[11]\" ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[12]\"  ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[13]\"  ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[14]\"  ></el-button>\r\n          </div>\r\n          </div>\r\n        </el-main>\r\n        <el-footer style=\"height:30px;\">颜色</el-footer>\r\n      </el-container>\r\n        </el-card>\r\n    </el-col>\r\n    </el-row>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport eventVue from '../components/eventVue'\r\nexport default {\r\n  name: 'toolBar',\r\n  props: {\r\n    msg: String\r\n  },\r\n  mounted() {\r\n  this.show();\r\n  },\r\n  data(){\r\n    return{\r\n      act:'1',\r\n      styleObj:[\r\n        { \r\n          value:'1',\r\n          backgroundColor:'rgb(0,0,0,1)'\r\n        },\r\n        { \r\n          value:'2',\r\n          backgroundColor:'rgb(127,127,127,1)'\r\n        },\r\n        { \r\n          value:'3',\r\n          backgroundColor:'rgb(136,0,21,1)'\r\n        },\r\n        { \r\n          value:'4',\r\n          backgroundColor:'rgb(200,15,30,1)'\r\n        },\r\n        { \r\n          value:'5',\r\n          backgroundColor:'rgb(150,230,127,1)'\r\n        },\r\n\r\n        { \r\n         value:'5',\r\n          backgroundColor:'rgb(237,28,36,1)'\r\n        },\r\n        { \r\n          value:'6',\r\n          backgroundColor:'rgb(255,242,0,1)'\r\n        },\r\n        { \r\n          value:'7',\r\n          backgroundColor:'rgb(255,127,39,1)'\r\n        },\r\n        { \r\n          value:'8',\r\n          backgroundColor:'rgb(34,177,76,1)'\r\n        },\r\n        { \r\n          value:'9',\r\n          backgroundColor:'rgb(0,162,232,1)'\r\n        },\r\n        { \r\n          value:'10',\r\n          backgroundColor:'rgb(63,72,204,1)'\r\n        },\r\n        { \r\n          value:'11',\r\n          backgroundColor:'rgb(163,73,164,1)'\r\n        },\r\n        { \r\n          value:'12',\r\n          backgroundColor:'rgb(255,255,255,1)'\r\n        },\r\n        { \r\n          value:'13',\r\n          backgroundColor:'rgb(152,217,234,1)'\r\n        },\r\n        { \r\n          value:'14',\r\n          backgroundColor:'rgb(163,73,164,1)'\r\n        },\r\n      ],\r\n      // styleObj1:{backgroundColor:'red'},\r\n    }\r\n  },\r\n  \r\n  methods:{\r\n  show(){\r\n      // console.log('hellowolrd');\r\n  },\r\n  color1(e){\r\n    eventVue.$emit(\"myFun\",e.currentTarget.style.backgroundColor)\r\n    // e.currentTarget.style.border = '1px solid rgb(3, 33, 63)';\r\n    // console.log(e.currentTarget.style);\r\n  },\r\n  line() {\r\n    eventVue.$emit(\"type\",\"line\");\r\n  },\r\n  beeline() {\r\n    eventVue.$emit(\"type\",\"beeline\");\r\n  },\r\n  radius() {\r\n    eventVue.$emit(\"type\",\"radius\");\r\n  },\r\n  rectangle() {\r\n    eventVue.$emit(\"type\",\"rectangle\");  \r\n  },\r\n  star() {\r\n    eventVue.$emit(\"type\",\"star\");  \r\n  },\r\n  Ploygon() {\r\n    eventVue.$emit(\"type\",\"Ploygon\");  \r\n  },\r\n  radomPloygon() {\r\n    eventVue.$emit(\"type\",\"radomPloygon\");  \r\n  },\r\n  clean() {\r\n    eventVue.$emit(\"clean\",true);\r\n  },\r\n  dele() {\r\n    eventVue.$emit('dele',true);\r\n  }\r\n  \r\n}\r\n}\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n    .flexColumn{\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-bottom:23px;\r\n    }\r\n      .el-header, .el-footer {\r\n    background-color: #B3C0D1;\r\n    color: #333;\r\n    text-align: center;\r\n    line-height: 30px;\r\n    }\r\n    .colorstyle{\r\n      /* padding-top:100px; */\r\n      \r\n      display: flex;\r\n      justify-content: center;\r\n      flex-wrap:wrap;\r\n      line-height: 16px;\r\n      margin-bottom:22px;\r\n    }\r\n    .colorstylechild{\r\n      width:100%;\r\n    }\r\n    .el-main {\r\n      background-color: #E9EEF3;\r\n      color: #333;\r\n      text-align: center;\r\n      line-height: 40px;\r\n    }\r\n    body > .el-container {\r\n      margin-bottom: 40px;\r\n    }\r\n</style>\r\n", "import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./toolBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./toolBar.vue?vue&type=script&lang=js&\"", "import { render, staticRenderFns } from \"./toolBar.vue?vue&type=template&id=5306397a&scoped=true&\"\nimport script from \"./toolBar.vue?vue&type=script&lang=js&\"\nexport * from \"./toolBar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./toolBar.vue?vue&type=style&index=0&id=5306397a&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5306397a\",\n  null\n  \n)\n\nexport default component.exports", "<style>\n\n</style>\n\n\n<template>\n  <div id=\"app\">\n    <toolBar/>\n    <HelloWorld msg=\"\"/>\n  </div>\n  \n  \n</template>\n\n<script>\nimport HelloWorld from './components/main.vue'\nimport toolBar from './components/toolBar.vue'\nexport default {\n  name: 'app',\n  components: {\n    HelloWorld,\n    toolBar\n  },\n  data(){\n    return{\n      activeIndex: '1',\n      activeIndex2: '1'\n    }\n  },\n  methods: {\n      // handleSelect(key, keyPath) {\n      //   console.log(key, keyPath);\n      // }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 0px;\n}\n</style>\n", "import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"", "import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=16bd4826&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style1 from \"./App.vue?vue&type=style&index=1&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports", "/* eslint-disable */\nimport Vue from 'vue';\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\nimport App from './App.vue';\n\nVue.use(ElementUI);\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n});\n", "import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=1&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=1&lang=css&\"", "import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./toolBar.vue?vue&type=style&index=0&id=5306397a&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./toolBar.vue?vue&type=style&index=0&id=5306397a&scoped=true&lang=css&\""],
    "sourceRoot": ""
}