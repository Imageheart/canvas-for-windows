{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?7e33","webpack:///./src/components/main.vue?a4ad","webpack:///./src/components/eventVue.js","webpack:///src/components/main.vue","webpack:///./src/components/main.vue?e350","webpack:///./src/components/main.vue","webpack:///./src/components/toolBar.vue?a5f7","webpack:///src/components/toolBar.vue","webpack:///./src/components/toolBar.vue?829e","webpack:///./src/components/toolBar.vue","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/components/toolBar.vue?8663","webpack:///./src/App.vue?8732"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Appvue_type_template_id_16bd4826_render","_vm","this","_h","$createElement","_c","_self","attrs","id","msg","staticRenderFns","mainvue_type_template_id_6f3769ec_scoped_true_render","_v","_s","ref","width","height","on","mousedown","$event","canvasDown","mousemove","canvasMove","mouseup","canvasUp","mouseleave","canvasLeave","mainvue_type_template_id_6f3769ec_scoped_true_staticRenderFns","eventVue","Vue","mainvue_type_script_lang_js_","props","String","mounted","_this","$on","message","colorstyle","type","openbox","clean","dele","savedev","loadcav","show","clickCanvasX","clickCanvasY","polynumber","imageData1","tempcanvax","tempcanvay","tempcount","tempdata","tempupdata","judge1","judge2","judge3","alltypetemp","alltype","allRanPolyData","ranpolyData","clickjudge","clickjudge1","tempnumber","Number","clickdata","methods","canvas","$refs","ctx","getContext","lineWidth","rect","stroke","e","temp","canvasMoveUse","clientX","target","offsetLeft","clientY","offsetTop","document","documentElement","scrollTop","x","y","moveTo","strokeStyle","_temp","construct","mainvue_type_script_lang_js_RadompolyNumber","generate","_temp2","a","b","newset","RanPolyType","mainvue_type_script_lang_js_RadomPolyType","concat","toConsumableArray","error","_i","Array","beginPath","closePath","isPointInPath","cleanScreen","generateAgainAll","drawDashRect","color","compare","minx","miny","maxx","maxy","canvasX","canvasY","shiftX","shiftY","offset","temparray","mainvue_type_script_lang_js_Beeline","mainvue_type_script_lang_js_BezierEllipse2","mainvue_type_script_lang_js_Rectangle","mainvue_type_script_lang_js_Star","mainvue_type_script_lang_js_Ploygon","fir","other","mainvue_type_script_lang_js_Line","mainvue_type_script_lang_js_Radompoly","sucker","Math","pow","abs","isshort","sqrt","_i2","fillStyle","fill","_this2","$prompt","confirmButtonText","cancelButtonText","inputPattern","inputErrorMessage","then","_ref","$message","catch","arc","PI","dis","drawDashLine","_ref2","_ref3","_ref4","slicedToArray","x1","y1","_ref5","x2","y2","step","arguments","undefined","count","floor","xv","yv","lineTo","left","top","$notify","title","$alert","callback","action","MIME_TYPE","imgURL","toDataURL","dlLink","createElement","download","href","dataset","downloadurl","join","body","appendChild","click","removeChild","console","log","Line","classCallCheck","BezierEllipse2","k","ox","oy","bezierCurveTo","Rectangle","Star","offsetx","offsety","cos","sin","restore","tempx","tempy","maopao","Ploygon","num","ang","save","translate","rotate","Beeline","min","max","Radompoly","mox","moy","RadompolyNumber","RadomPolyType","_len","_key","arr","components_mainvue_type_script_lang_js_","component","componentNormalizer","main","toolBarvue_type_template_id_d9bc333a_scoped_true_render","gutter","span","shadow","staticClass","size","icon","circle","savecav","staticStyle","line-height","autofocus","line","beeline","star","rectangle","radius","radomPloygon","padding","style","styleObj","color1","toolBarvue_type_template_id_d9bc333a_scoped_true_staticRenderFns","toolBarvue_type_script_lang_js_","act","backgroundColor","$emit","currentTarget","components_toolBarvue_type_script_lang_js_","toolBar_component","toolBar","Appvue_type_script_lang_js_","components","HelloWorld","activeIndex","activeIndex2","src_Appvue_type_script_lang_js_","App_component","App","use","ElementUI","el","render","h","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_toolBar_vue_vue_type_style_index_0_id_d9bc333a_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_toolBar_vue_vue_type_style_index_0_id_d9bc333a_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_1_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_1_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/app.32cb2b02.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('toolBar'),_c('HelloWorld',{attrs:{\"msg\":\"\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h1',[_vm._v(_vm._s(_vm.msg))]),_c('canvas',{ref:\"canvas\",attrs:{\"id\":\"canvas\",\"width\":\"800\",\"height\":\"600\"},on:{\"mousedown\":function($event){return _vm.canvasDown($event)},\"mousemove\":function($event){return _vm.canvasMove($event)},\"mouseup\":function($event){return _vm.canvasUp($event)},\"mouseleave\":function($event){return _vm.canvasLeave($event)}}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Vue from 'vue'\r\n\r\nexport default new Vue","<template>\n  <div>\n    <h1>{{ msg }}</h1>\n    \n    <canvas\n      id=\"canvas\"\n      width=\"800\"\n      height=\"600\"\n      @mousedown=\"canvasDown($event)\"\n      @mousemove=\"canvasMove($event)\"\n      @mouseup=\"canvasUp($event)\"\n      @mouseleave=\"canvasLeave($event)\"\n      ref=\"canvas\"\n    ></canvas> \n  </div>\n</template>\n\n<script>\n\nimport eventVue from '../components/eventVue'\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  mounted() {\n  eventVue.$on(\"myFun\",(message)=>{   \n      this.colorstyle = message;   \n      }),\n  eventVue.$on(\"type\",(message)=>{   \n      this.type = message;\n      if(message == \"Ploygon\" \n      // || message == \"radomPloygon\"\n      ){\n        this.openbox(message);\n      }   \n      }),\n  eventVue.$on(\"clean\",()=>{   \n      this.clean();\n\n      }),\n  eventVue.$on(\"dele\",()=>{   \n      this.dele();\n\n      }),\n  eventVue.$on(\"savecav\",()=>{   \n      this.savedev();\n\n      }),\n  eventVue.$on(\"loadcav\",()=>{   \n      this.loadcav();\n\n      }),\n  this.show();\n  },\n  data(){\n    return{\n      colorstyle: 'rgb(0,0,0,1)',\n      clickCanvasX: '',\n      clickCanvasY: '',\n      type: 'line',\n      // clean: false\n      polynumber:0,\n      imageData1:[],\n      tempcanvax:0, // 记录任意多边形第一次生成后的鼠标up状态的位置，下同\n      tempcanvay:0,\n      tempcount:0, //记录任意多边形，以此判断多边形的生成\n      tempdata:[], // 记录任意多边形的初始位置 后添加：包括每个图形的初始坐标（用于判断位移使用）\n      tempupdata:[], //记录第一次后任意多边形每次鼠标up的坐标\n      judge1:false,// 三个皆为判断任意多边形的，这个为判断是否画了起始边\n      judge2:false, // 判断画了起始边后的每次画边\n      judge3:false, // 判断点击UP的位置与移动的距离是否小于一个值（这里设3）\n      alltypetemp:[], // 存放暂时点击流程下的图形\n      alltype:[], // 存放所有图形以不断重新生成\n      allRanPolyData:[], //存放暂时性的未完成的任意多边形\n      ranpolyData:[], // 存放已经完成的任意多边形以供移动操作。\n      clickjudge:false, // 判断是否进入选中状态\n      clickjudge1:false, // 判断进入选中状态后开始移动\n      tempnumber:Number, // 查找选中的是哪个图形\n      clickdata:[], // 选中图形的位置\n      key:[] //// 当绘画完成一个任意多边形时，将这个多边形的信息存入这个key里面，然后根据这个key里的参数再重新生成一个图形，并将其保存进alltype里面。\n    }\n  },\n  methods:{\n  show(){\n      this.canvas = this.$refs.canvas;//指定canvas\n      this.ctx = this.canvas.getContext(\"2d\");//设置2D渲染区域\n      this.ctx.lineWidth = 1;//设置线的宽度\n      this.ctx.rect(0, 0, 800, 600);\n      // this.ctx.lineJoin = 'bevel';\n      this.ctx.stroke();\n\n  },\n  canvasDown(e) {\n      this.canvasMoveUse = true;\n      this.clickCanvasX = e.clientX - e.target.offsetLeft;\n      this.clickCanvasY = e.clientY - e.target.offsetTop + document.documentElement.scrollTop\n      let value;\n      let temp;\n\n      // 判断是否是任意多边形\n      if(this.type !='radomPloygon'){\n        this.judge1 = false;\n      }\n      this.tempdata.push({x:this.clickCanvasX,y:this.clickCanvasY});\n\n      if(this.judge1){\n        this.ctx.moveTo(this.tempcanvax, this.tempcanvay);\n        // 创建多边形后，赋予的点击生成边的功能\n        this.ctx.strokeStyle = this.colorstyle;\n        let temp = [this.ctx, this.tempupdata[this.tempupdata.length-1].x, this.tempupdata[this.tempupdata.length-1].y, this.clickCanvasX, this.clickCanvasY,this.ctx.strokeStyle,this.type];\n        this.alltypetemp = new RadompolyNumber(...temp);\n        this.alltypetemp.generate();\n        this.ctx.stroke();\n        // 自动缝合\n        try {\n          if(this.tempupdata[this.tempupdata.length-1].x==this.clickCanvasX&&this.tempupdata[this.tempupdata.length-1].y==this.clickCanvasY){\n            let temp = [this.ctx, this.tempupdata[this.tempupdata.length-1].x, this.tempupdata[this.tempupdata.length-1].y, this.tempdata[0].x, this.tempdata[0].y,this.tempcount,this.ctx.strokeStyle];\n            this.allRanPolyData.push(new RadompolyNumber(...temp));\n\n            // 重新生成整个任意多边形\n            \n            let tempdata = [this.ctx,this.allRanPolyData[0].x+this.allRanPolyData[0].a,this.allRanPolyData[0].y+this.allRanPolyData[0].b,this.allRanPolyData[0].x,this.allRanPolyData[0].y,this.tempcount,this.ctx.strokeStyle];\n            let newset = new RadompolyNumber(...tempdata);\n            this.key = [];\n            this.key.push(newset);\n            for(let i=1;i<this.allRanPolyData.length;i++){\n              this.key.push(this.allRanPolyData[i]);\n            }\n            let RanPolyType = new RadomPolyType(this.ctx,this.type,this.ctx.strokeStyle,0,...this.key);\n            // let aaa = [this.ctx,this.type,this.ctx.strokeStyle,0,this.key]\n            // console.log(aaa);\n            this.alltype.push(RanPolyType);\n\n            this.tempcanvax = 0;\n            this.tempcanvay = 0;\n            this.tempcount = 0;\n            this.tempdata = [];\n            this.tempupdata = [];\n            this.allRanPolyData = [];\n            this.alltypetemp = [];\n            this.judge1 = false;\n            this.judge2 = false;\n            this.judge3 = false;\n            return;\n          }\n          \n          // console.log(this.tempupdata[this.tempupdata.length-2].x,this.tempupdata[this.tempupdata.length-2].y);\n        } \n        catch (error) {\n          // console.log(error);\n        }\n      }else{\n        this.ctx.moveTo(this.clickCanvasX, this.clickCanvasY);\n      }\n\n\n        // 遍历每一个插进数组的数据的图像,为每一个生成一个矩形,然后判断点击的这个点是否在这个矩形里面,如果是,那就是可以选择他了\n      for(let i=0 ;i<this.alltype.length;i++){\n          if(this.alltype[i] instanceof Array){\n            // 找出这条线的minx,miny,maxx,maxy;\n            // let arrayx = [];\n            // let arrayy = [];\n            // let tempcorr = this.alltype[i];\n            // for(let j=0;j<tempcorr.length;j++){\n            //   arrayx.push(tempcorr[j].x);\n            //   arrayy.push(tempcorr[j].y);\n            // }\n            // maopao(arrayx);\n            // maopao(arrayy);\n            // let minx = arrayx[0];\n            // let maxx = arrayx[arrayx.length-1];\n            // let miny = arrayy[0];\n            // let maxy = arrayy[arrayy.length-1];\n            //  this.ctx.beginPath();\n            // this.ctx.rect(minx,miny,maxx-minx,maxy-miny);\n            // this.ctx.closePath();\n            // if(this.ctx.isPointInPath(this.clickCanvasX, this.clickCanvasY)){\n            //   this.cleanScreen(this.ctx);\n            //   temp = this.alltype[i];\n            //   this.alltype.splice(i,1);\n            //   this.generateAgainAll(this.alltype);\n            //   this.alltype.splice(i,0,temp);\n            //   this.drawDashRect(this.ctx,minx,miny,maxx-minx,maxy-miny);\n            //   console.log(tempcorr[0].color);\n            //   this.ctx.strokeStyle = tempcorr[0].color;\n            //   this.clickdata.push([minx,miny,maxx-minx,maxy-miny]);\n            //   this.clickjudge = true;\n            //   this.tempnumber = i;\n            //   if(this.clickjudge1){\n            //     console.log('continue');\n            //     this.generateAgainAll(this.alltype);\n            //     if(this.clickdata[0][0]==minx&&this.clickdata[0][1]==miny&&this.clickdata[0][2]==maxx-minx&&this.clickdata[0][3]==maxy-miny){\n            //       //do something\n            //     }else{\n            //     this.clickdata.splice(0,1);\n            //     this.clickjudge1 = false;\n            //     }\n            //   }\n            //   return \n            // }else{\n            //   // 如果不是则清除掉虚线框\n            //   // this.cleanScreen(this.ctx);\n            //   this.generateAgainAll(this.alltype);\n            //   this.clickjudge = false;\n            // }\n            continue;\n          }// 线条暂时无法做。。\n          switch(this.alltype[i].type){\n            case 'radius':\n            this.ctx.beginPath();\n            this.ctx.rect(this.alltype[i].x-this.alltype[i].a,this.alltype[i].y+this.alltype[i].b,this.alltype[i].a*2,-this.alltype[i].b*2);\n            this.ctx.closePath();\n            if(this.ctx.isPointInPath(this.clickCanvasX, this.clickCanvasY)){\n              this.cleanScreen(this.ctx);\n              this.generateAgainAll(this.alltype);\n              this.drawDashRect(this.ctx,this.alltype[i].x-this.alltype[i].a,this.alltype[i].y+this.alltype[i].b,this.alltype[i].a*2,-this.alltype[i].b*2);\n              this.clickdata.push([this.alltype[i].x-this.alltype[i].a,this.alltype[i].y+this.alltype[i].b,this.alltype[i].a*2,-this.alltype[i].b*2]);\n              this.ctx.strokeStyle = this.alltype[i].color;\n              this.clickjudge = true;\n              this.tempnumber = i;\n              if(this.clickjudge1){\n                if(this.clickdata[0][0]==this.alltype[i].x-this.alltype[i].a&&this.clickdata[0][1]==this.alltype[i].y+this.alltype[i].b&&this.clickdata[0][2]==this.alltype[i].a*2&&this.clickdata[0][3]==-this.alltype[i].b*2){\n                  //do something\n                  // console.log('can');\n                }else{\n                this.clickdata.splice(0,1);\n                // console.log('last');\n                this.clickjudge1 = false;\n                }\n              }else{\n                // this.clickjudge = false;\n              }\n              return \n            }\n            else{\n              // 如果不是则清除掉虚线框\n              this.generateAgainAll(this.alltype);\n              this.clickjudge = false;\n            }\n            try {\n              if(this.clickdata[0][0]==this.alltype[i].x-this.alltype[i].a&&this.clickdata[0][1]==this.alltype[i].y+this.alltype[i].b&&this.clickdata[0][2]==this.alltype[i].a*2&&this.clickdata[0][3]==-this.alltype[i].b*2){\n              this.clickjudge1 = false;\n              this.clickdata.splice(0,1);\n              this.cleanScreen(this.ctx);\n              this.generateAgainAll(this.alltype);\n            }\n            } catch (error) {\n              // console.log(error);\n            }\n            \n            break;\n            case 'rectangle':\n            value = this.alltype[i].compare();\n            this.ctx.beginPath();\n            this.ctx.rect(value.minx,value.miny,value.maxx-value.minx,value.maxy-value.miny);\n            this.ctx.closePath();\n            if(this.ctx.isPointInPath(this.clickCanvasX, this.clickCanvasY)){\n              this.cleanScreen(this.ctx);\n              temp = this.alltype[i];\n              this.alltype.splice(i,1);\n              this.generateAgainAll(this.alltype);\n              this.alltype.splice(i,0,temp);\n              this.drawDashRect(this.ctx,value.minx,value.miny,value.maxx-value.minx,value.maxy-value.miny);\n              this.ctx.strokeStyle = this.alltype[i].color;\n              this.clickdata.push([value.minx,value.miny,value.maxx-value.minx,value.maxy-value.miny]);\n              this.clickjudge = true;\n              this.tempnumber = i;\n              if(this.clickjudge1){\n                if(this.clickdata[0][0]==value.minx&&this.clickdata[0][1]==value.miny&&this.clickdata[0][2]==value.maxx-value.minx&&this.clickdata[0][3]==value.maxy-value.miny){\n                  //do something\n                }else{\n                this.clickdata.splice(0,1);\n                this.clickjudge1 = false;\n                }\n              }\n              return \n            }else{\n              // 如果不是则清除掉虚线框\n              // this.cleanScreen(this.ctx);\n              this.generateAgainAll(this.alltype);\n              this.clickjudge = false;\n            }\n            try {\n              if(this.clickdata[0][0]==value.minx&&this.clickdata[0][1]==value.miny&&this.clickdata[0][2]==value.maxx-value.minx&&this.clickdata[0][3]==value.maxy-value.miny){\n              this.clickjudge1 = false;\n              this.clickdata.splice(0,1);\n              this.cleanScreen(this.ctx);\n              this.generateAgainAll(this.alltype);\n            }\n            } catch (error) {\n              // console.log(error);\n            }\n            break;\n            default:\n            value = this.alltype[i].compare();\n            this.ctx.beginPath();\n            this.ctx.rect(value.minx,value.miny,value.maxx-value.minx,value.maxy-value.miny);\n            this.ctx.closePath();\n            if(this.ctx.isPointInPath(this.clickCanvasX, this.clickCanvasY)){\n              this.cleanScreen(this.ctx);\n              this.generateAgainAll(this.alltype);\n              this.drawDashRect(this.ctx,value.minx,value.miny,value.maxx-value.minx,value.maxy-value.miny);\n              this.ctx.strokeStyle = this.alltype[i].color;\n              this.clickdata.push([value.minx,value.miny,value.maxx-value.minx,value.maxy-value.miny]);\n              this.clickjudge = true;\n              this.tempnumber = i;\n\n              if(this.clickjudge1){\n                if(this.clickdata[0][0]==value.minx&&this.clickdata[0][1]==value.miny&&this.clickdata[0][2]==value.maxx-value.minx&&this.clickdata[0][3]==value.maxy-value.miny){\n                  //do something\n                }else{\n                this.clickdata.splice(0,1);\n                this.clickjudge1 = false;\n                }\n              }\n              return \n            }else{\n              // 如果不是则清除掉虚线框\n              // this.cleanScreen(this.ctx);\n              this.generateAgainAll(this.alltype);\n              this.clickjudge = false;\n            }\n            try {\n              if(this.clickdata[0][0]==value.minx&&this.clickdata[0][1]==value.miny&&this.clickdata[0][2]==value.maxx-value.minx&&this.clickdata[0][3]==value.maxy-value.miny){\n              this.clickjudge1 = false;\n              // this.cleanScreen(this.ctx);\n              if(this.alltype[i].type!='radomPloygon'){\n                this.cleanScreen(this.ctx);\n              }\n              this.clickdata.splice(0,1);\n              this.generateAgainAll(this.alltype);\n              }\n            } catch (error) {\n              // console.log(error);\n            }\n          }\n      }\n      this.cleanScreen(this.ctx);\n      this.generateAgainAll(this.alltype);\n      this.generateAgainAll(this.allRanPolyData);\n      \n    },\n    canvasMove(e) {\n      if (this.canvasMoveUse) {\n        // 只有允许移动时调用\n        // console.log('move');\n        const t = e.target;\n        let canvasX;\n        let canvasY;\n        canvasX = e.clientX - t.offsetLeft;\n        canvasY = e.clientY - t.offsetTop + document.documentElement.scrollTop;\n        let shiftX = this.clickCanvasX - canvasX;\n        let shiftY = this.clickCanvasY - canvasY;\n        let temp = [];\n        \n        if(this.clickjudge){\n          let value = this.alltype[this.tempnumber];\n          let type = value.type;\n          // if(value instanceof Array){\n          //   type = value[0].type;\n          // }\n          let offset = {}; // 任意多边形偏移量\n          let temparray = []; // 移动任意多边形\n          if(this.clickjudge1){\n              switch(type){\n              case 'line':\n              // this.cleanScreen(this.ctx);\n              // this.generateAgainAll(this.alltype);\n              // this.ctx.beginPath();\n              // this.ctx.strokeStyle = this.colorstyle;\n              // for(let i=0;i<value.length;i++){\n              //   templine.push(value[i]);\n              //   templine[i].a = shiftX;\n              //   templine[i].b = shiftY;\n              // }\n              // temp = [this.ctx, canvasX, canvasY,shiftX, shiftY,this.ctx.strokeStyle,this.type];\n              // this.alltypetemp.push(new Line(...temp));\n              // for(let i=0;i<this.alltypetemp.length;i++){\n              //   this.alltypetemp[i].generate();\n              // }\n              break;\n              case 'beeline':\n              this.ctx.beginPath();\n              this.ctx.strokeStyle = value.color;\n              temp = [this.ctx, canvasX-(0.5*value.a), canvasY-(0.5*value.b), value.a, value.b,this.ctx.strokeStyle,type];\n              this.cleanScreen(this.ctx);\n              this.alltypetemp = new Beeline(...temp);\n              this.generateAgainAll(this.alltype);\n              this.alltypetemp.generate();\n              this.ctx.stroke();\n              break;\n              case 'radius':\n              // 生成一个之前一样的圆形;\n              this.ctx.beginPath();\n              this.ctx.strokeStyle = value.color;\n              temp = [this.ctx, canvasX, canvasY, value.a, value.b,this.ctx.strokeStyle,type];\n              this.cleanScreen(this.ctx);\n              this.alltypetemp = new BezierEllipse2(...temp);\n              this.generateAgainAll(this.alltype);\n              this.alltypetemp.generate();\n              this.ctx.stroke();\n              break;\n              case 'rectangle':\n              this.ctx.beginPath();\n              this.ctx.strokeStyle = value.color;\n              temp = [this.ctx, canvasX-(0.5*value.a), canvasY-(0.5*value.b), value.a, value.b,this.ctx.strokeStyle,type];\n              this.cleanScreen(this.ctx);\n              this.alltypetemp = new Rectangle(...temp);\n              this.generateAgainAll(this.alltype);\n              this.alltypetemp.generate();\n              this.ctx.stroke();\n              break;\n              case 'star':\n              this.ctx.beginPath();\n              this.ctx.strokeStyle = value.color;\n              temp = [this.ctx, canvasX, canvasY, value.a, value.b,this.ctx.strokeStyle,type];\n              this.cleanScreen(this.ctx);\n              this.alltypetemp = new Star(...temp);\n              this.generateAgainAll(this.alltype);\n              this.alltypetemp.generate();\n              this.ctx.stroke();\n              break;\n              case 'Ploygon':\n              this.ctx.beginPath();\n              this.ctx.strokeStyle = value.color;\n              temp = [this.ctx, canvasX, canvasY, value.a, value.b,this.ctx.strokeStyle,type,value.polynumber];\n              this.cleanScreen(this.ctx);\n              this.alltypetemp = new Ploygon(...temp);\n              this.generateAgainAll(this.alltype);\n              this.alltypetemp.generate();\n              this.ctx.stroke();\n              break;\n              case 'radomPloygon':\n              this.ctx.beginPath();\n              this.cleanScreen(this.ctx);\n              this.generateAgainAll(this.alltype);\n              offset = {shiftX,shiftY};\n              temparray = [value.fir,...value.other];\n              this.ctx.strokeStyle = value.color;\n              temp = [this.ctx, value.type, value.color, offset,...temparray];\n              this.ranpolyData = new RadomPolyType(...temp);\n              this.generateAgainAll(this.ranpolyData);\n              this.ranpolyData.generate();\n              this.ctx.strokeStyle = value.color;\n              this.ctx.stroke();\n              break;\n            }\n          }else{\n            return \n          }\n          \n        }else{\n          switch(this.type){\n          case 'line': \n            this.cleanScreen(this.ctx);\n            this.ctx.strokeStyle = this.colorstyle;\n            this.generateAgainAll(this.alltype);\n            this.ctx.beginPath();\n            this.ctx.strokeStyle = this.colorstyle;\n            temp = [this.ctx, canvasX, canvasY,0, 0,this.ctx.strokeStyle,this.type];\n            this.alltypetemp.push(new Line(...temp));\n            \n            for(let i=0;i<this.alltypetemp.length;i++){\n              this.alltypetemp[i].generate();\n            }\n          break;\n          case 'beeline':\n              this.ctx.beginPath();\n              this.ctx.strokeStyle = this.colorstyle;\n              temp = [this.ctx, canvasX, canvasY, shiftX, shiftY,this.ctx.strokeStyle,this.type];\n              this.cleanScreen(this.ctx);\n              this.alltypetemp = new Beeline(...temp);\n              this.generateAgainAll(this.alltype);\n              this.alltypetemp.generate();\n              this.ctx.strokeStyle = this.colorstyle;\n              this.ctx.stroke();\n              // console.log('beeline');\n          break;\n          case 'radius':\n              this.ctx.beginPath();\n              this.ctx.strokeStyle = this.colorstyle;\n              temp = [this.ctx, canvasX, canvasY, shiftX, shiftY,this.ctx.strokeStyle,this.type];\n              this.cleanScreen(this.ctx);\n              this.alltypetemp = new BezierEllipse2(...temp);\n              this.generateAgainAll(this.alltype);\n              this.alltypetemp.generate();\n              this.ctx.strokeStyle = this.colorstyle;\n              this.ctx.stroke();\n          break;\n          case 'rectangle':\n              this.ctx.beginPath();\n              this.ctx.strokeStyle = this.colorstyle;\n              temp = [this.ctx, canvasX, canvasY, shiftX, shiftY,this.ctx.strokeStyle,this.type];\n              this.cleanScreen(this.ctx);\n              this.alltypetemp = new Rectangle(...temp);\n              this.generateAgainAll(this.alltype);\n              this.alltypetemp.generate();\n              this.ctx.strokeStyle = this.colorstyle;\n              this.ctx.stroke();\n          break;\n          case 'star':\n              this.ctx.beginPath();\n              this.ctx.strokeStyle = this.colorstyle;\n              temp = [this.ctx, canvasX, canvasY, shiftX, shiftY,this.ctx.strokeStyle,this.type];\n              this.cleanScreen(this.ctx);\n              this.alltypetemp = new Star(...temp);\n              this.generateAgainAll(this.alltype);\n              this.alltypetemp.generate();\n              this.ctx.strokeStyle = this.colorstyle;\n              this.ctx.stroke();\n          break;\n          case 'Ploygon':\n              this.ctx.beginPath();\n              this.ctx.strokeStyle = this.colorstyle;\n              temp = [this.ctx, canvasX, canvasY, shiftX, shiftY,this.ctx.strokeStyle,this.type,this.polynumber];\n              this.cleanScreen(this.ctx);\n              this.alltypetemp = new Ploygon(...temp);\n              this.generateAgainAll(this.alltype);\n              this.alltypetemp.generate();\n              this.ctx.strokeStyle = this.colorstyle;\n              this.ctx.stroke();\n          break;\n          case 'radomPloygon':\n            this.ctx.beginPath();\n            this.cleanScreen(this.ctx);\n            this.ctx.strokeStyle = this.colorstyle;\n            this.generateAgainAll(this.allRanPolyData);\n            this.judge1 =true;\n            if(this.judge2&&this.tempcanvax!=0){\n              temp = [this.ctx, this.tempcanvax, this.tempcanvay, -shiftX, -shiftY,this.tempcount,canvasX-this.tempcanvax,canvasY-this.tempcanvay,this.ctx.strokeStyle,this.type];\n            }else{\n              temp = [this.ctx, canvasX, canvasY, shiftX, shiftY,this.tempcount,0,0,this.ctx.strokeStyle,this.type];\n            }\n            this.generateAgainAll(this.alltype);\n            this.generateAgainAll(this.allRanPolyData);\n            this.alltypetemp = new Radompoly(...temp);\n            this.alltypetemp.generate();\n            this.ctx.strokeStyle = this.colorstyle;\n            this.ctx.stroke();\n            break;\n          }\n          \n            this.ctx.closePath();    \n\n        }\n      }\n    },\n    canvasUp(e) {\n      // 如果tempdata与这个点太近，则把tempdata清空？问题时这个点与tempdata的关系：用于判断\n      this.canvasMoveUse = false;\n      const t = e.target;\n      let canvasX;\n      let canvasY;\n      canvasX = e.clientX - t.offsetLeft;\n      canvasY = e.clientY - t.offsetTop + document.documentElement.scrollTop;\n      // \n      if(this.judge1){\n        this.judge3 = this.sucker(this.ctx,this.tempdata[0].x, this.tempdata[0].y,canvasX,canvasY);\n        // 自动吸附到起始点\n        this.allRanPolyData.push(this.alltypetemp);\n        if(this.judge3){\n          let temp = [this.ctx, canvasX, canvasY, this.tempdata[0].x, this.tempdata[0].y,this.tempcount,this.ctx.strokeStyle,this.type];\n          this.allRanPolyData.push(new RadompolyNumber(...temp));\n          let tempdata = [this.ctx,this.allRanPolyData[0].x+this.allRanPolyData[0].a,this.allRanPolyData[0].y+this.allRanPolyData[0].b,this.allRanPolyData[0].x,this.allRanPolyData[0].y,this.tempcount];\n          let newset = new RadompolyNumber(...tempdata);\n          this.key = [];\n          this.key.push(newset);\n          for(let i=1;i<this.allRanPolyData.length;i++){\n            this.key.push(this.allRanPolyData[i]);\n          }\n          let RanPolyType = new RadomPolyType(this.ctx,this.type,this.ctx.strokeStyle,0,...this.key);\n          this.alltype.push(RanPolyType);\n          this.tempcanvax = 0;\n          this.tempcanvay = 0;\n          this.tempcount = 0;\n          this.tempdata = [];\n          this.tempupdata = [];\n          this.allRanPolyData = [];\n          this.alltypetemp = [];\n          this.judge1 = false;\n          this.judge2 = false;\n          this.judge3 = false;\n        }else{\n          this.tempupdata.push({x:canvasX,y:canvasY});  // 每次点击完毕，记录这个点\n          let x = Math.pow(Math.abs(this.tempupdata[0].x-this.tempdata[0].x),2);\n          let y = Math.pow(Math.abs(this.tempupdata[0].y-this.tempdata[0].y),2);\n          let isshort = Math.sqrt(x+y); \n          // 如果第一个点击完毕的点与起始点太近，则重新画\n          if(isshort<5){\n            isshort = 0;\n            this.cleanScreen(this.ctx); \n            this.tempcanvax = 0;\n            this.tempcanvay = 0;\n            this.tempcount = 0;\n            this.tempdata = [];\n            this.tempupdata = [];\n            this.judge1 = false;\n            this.judge2 = false;\n            this.judge3 = false;\n            return;\n          }\n          this.judge2 = true;\n          this.tempcanvax = canvasX; // 赋值当前up的点\n          this.tempcanvay = canvasY;\n          this.tempcount++;\n        }\n        \n      }else{\n        try {\n        this.judge3 = this.sucker(this.ctx,this.tempdata[0].x, this.tempdata[0].y,canvasX,canvasY);\n          if(this.judge3){\n          this.allRanPolyData = [];\n          }\n        } catch (error) {\n          // console.log('这里会因为前面把东西都清空的原因而无法执行上面的try');\n        }\n      }\n        if(this.clickjudge){\n          if(this.clickjudge1){\n            if(this.alltype[this.tempnumber].type!='radomPloygon'){\n              if(this.alltypetemp.length!=0){\n                this.alltype.push(this.alltypetemp);\n                this.alltypetemp = [];\n                this.alltype.splice(this.tempnumber,1);\n              }\n              this.clickjudge = false;\n              this.clickjudge1 = false;\n              this.clickdata = [];\n            }else{\n              // 偏移后需要改变原来的点以存进栈里\n              if(this.ranpolyData.length!=0){\n                let offset = this.ranpolyData.offset;\n                this.ranpolyData.fir.x = this.ranpolyData.fir.x - offset.shiftX;\n                this.ranpolyData.fir.y = this.ranpolyData.fir.y - offset.shiftY;\n                for(let i=0;i<this.ranpolyData.other.length;i++){\n                  this.ranpolyData.other[i].x = this.ranpolyData.other[i].x - offset.shiftX;\n                  this.ranpolyData.other[i].y = this.ranpolyData.other[i].y - offset.shiftY;\n                }\n                this.ranpolyData.offset = {shiftX:0,shiftY:0};\n                this.alltype.push(this.ranpolyData);\n                this.alltype.splice(this.tempnumber,1);\n                this.ranpolyData = [];\n              }\n              this.clickjudge = false;\n              this.clickjudge1 = false;\n              this.clickdata = [];\n            }\n            this.cleanScreen(this.ctx);\n            // this.generateAgainAll(this.allRanPolyData);\n            this.generateAgainAll(this.alltype);\n            return\n          }else{\n            // console.log('clickjudge1');\n            // console.log(this.alltype);\n            this.clickjudge1 = true;\n            return\n          }\n            \n            \n        }\n      if(this.type!='radomPloygon'){\n          if(this.alltypetemp.length!=0){\n            this.alltype.push(this.alltypetemp);\n            this.alltypetemp = [];\n          }\n          \n      }\n      this.cleanScreen(this.ctx);\n      this.generateAgainAll(this.alltype);\n      this.generateAgainAll(this.allRanPolyData);\n    },\n    canvasLeave() {\n      this.canvasMoveUse = false; \n    },\n    clean() {\n      this.canvas = this.$refs.canvas;//指定canvas\n      this.ctx = this.canvas.getContext(\"2d\");//设置2D渲染区域\n      this.ctx.fillStyle=\"#ffffff\";  \n      this.ctx.beginPath(); \n      this.ctx.rect(0, 0, 800, 600);\n      this.ctx.fill();\n      this.ctx.strokeStyle = \"rgb(0,0,0,1)\";\n      this.ctx.rect(0, 0, 800, 600);\n      this.ctx.stroke();\n      this.ctx.closePath();  \n      this.imageData1 = [];\n      this.polynumber = 0;\n      this.tempcount = 0;\n      this.judge1 = false;\n      this.judge2 = false;\n      this.judge3 = false;\n      this.clickjudge = false;\n      this.clickjudge1 = false;\n      this.tempdata = [];\n      this.tempupdata = [];\n      this.tempcanvax = 0;\n      this.tempcanvay = 0;\n      this.alltype = [];\n      this.type = 'line';\n    },\n    cleanScreen(ctx) {\n    ctx.fillStyle=\"#ffffff\";  \n    ctx.beginPath();  \n    ctx.rect(0, 0, 800, 600);\n    ctx.fill();\n    ctx.strokeStyle = \"rgb(0,0,0,1)\";\n    ctx.rect(0, 0, 800, 600);\n    ctx.stroke();\n    ctx.closePath();\n    },\n    openbox(msg) {\n      this.$prompt('请输入边数', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          inputPattern: /^((0?[3-9])|((1)[0-9])|20)$/,\n          inputErrorMessage: '请输入大于等于3小于等于20的整数'\n        }).then(({ value }) => {\n          this.$message({\n            type: 'success',\n            message: '你输入的边数是: ' + value,\n          });\n          if(msg == 'Ploygon') {\n            this.polynumber = value;\n          }\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '取消输入'\n          });\n          this.type = 'line';\n        });\n    },\n    \n    \n    //x,y:开始绘制的点，a,b:最后停止的点\n    sucker(ctx,x,y,a,b){\n      ctx.beginPath();\n    ctx.arc(x,y,5,0,Math.PI * 2);\n    // ctx.stroke();\n    ctx.closePath();\n    let dis = Math.sqrt((a - x) * (a - x) + (b - y) * (b - y));\n    if(dis <= 5){\n        return true;\n    }\n    return false;\n    },\n    drawDashLine(ctx,[x1, y1], [x2, y2], step = 5){\n    const x = x2 - x1,\n        y = y2 - y1,\n        count = Math.floor(Math.sqrt(x * x + y * y) / step),\n        xv = x / count,\n        yv = y / count;\n    ctx.beginPath();\n    for (let i = 0; i < count; i ++) {\n        if (i % 2 === 0) {\n            ctx.moveTo(x1, y1);\n        } else {\n            ctx.lineTo(x1, y1);\n        }\n      x1 += xv;\n      y1 += yv;\n    }\n    ctx.lineTo(x2, y2);\n    },\n    drawDashRect(ctx,left, top, width, height, step = 5){\n    ctx.strokeStyle = 'rgb(0,0,0,1)';\n    this.drawDashLine(ctx,[left, top], [left + width, top], step);\n    ctx.stroke();\n    this.drawDashLine(ctx,[left + width, top], [left + width, top + height], step);\n    ctx.stroke();\n    this.drawDashLine(ctx,[left + width, top + height], [left, top + height], step);\n    ctx.stroke();\n    this.drawDashLine(ctx,[left, top + height], [left, top], step);\n    ctx.stroke();\n    return true;\n    },\n    generateAgainAll(data){\n      let value = data;\n      let temp;\n      for(let i=0;i<value.length;i++){\n        if(value[i] instanceof Array){\n          temp = value[i];\n          this.ctx.moveTo(temp[0].x,temp[0].y);\n          for(let j=0;j<temp.length;j++){\n            this.ctx.lineTo(temp[j].x, temp[j].y);\n            temp[j].generate();\n          }\n          this.ctx.beginPath();\n          this.ctx.strokeStyle = \"rgb(0,0,0,1)\";\n          this.ctx.stroke();\n          this.ctx.closePath();\n          \n        }else{\n          this.ctx.beginPath();\n          this.ctx.strokeStyle = value[i].color;\n          this.ctx.stroke();\n          this.ctx.strokeStyle = value[i].color;\n          value[i].generate();\n          this.ctx.strokeStyle = value[i].color;\n          this.ctx.stroke();\n          this.ctx.closePath();\n        }        \n      }\n    },\n    dele(){\n      if(!this.clickjudge&&!this.clickjudge1){\n        this.$notify({\n          title: '删除图形',\n          message: '您未选定图形删除'\n        });\n      }else{\n        this.alltype.splice(this.tempnumber,1);\n        this.cleanScreen(this.ctx);\n        this.generateAgainAll(this.alltype);\n        this.clickjudge = false;\n        this.clickjudge1 = false;\n        this.clickdata = [];\n        // console.log(this.tempnumber);\n      }\n    },\n    savedev() {\n      if(!this.alltype.length){\n        this.$alert('画布中并没有图形，无法保存！', '保存图形', {\n          confirmButtonText: '确定',\n          callback: action => {\n            return;\n          }\n        });\n      }\n      let MIME_TYPE = \"image/png\";\n      let imgURL = this.canvas.toDataURL(MIME_TYPE);\n      let dlLink = document.createElement('a');\n      dlLink.download = \"fileName\";\n      dlLink.href = imgURL;\n      dlLink.dataset.downloadurl = [MIME_TYPE, dlLink.download, dlLink.href].join(':');\n      document.body.appendChild(dlLink);\n      dlLink.click();\n      document.body.removeChild(dlLink);\n    },\n    loadcav() {\n      console.log('2');\n    },\n  }\n}\n\nclass Line{\n  constructor(ctx, x, y,a,b,color,type) {\n    // this.ctx, canvasX, canvasY,this.ctx.strokeStyle,this.type\n          this.ctx = ctx;\n          this.x = x;\n          this.y = y;\n          this.a = a;\n          this.b = b;\n          this.type = type;\n          this.color = color;\n        }\n        generate(){\n          // if(this.a!=0){\n          //   this.ctx.lineTo(this.x-this.a, this.y-this.b);\n          //   // this.ctx.lineTo(this.x, this.y);\n          // }else{\n          this.ctx.lineTo(this.x, this.y);\n          // }\n          this.ctx.strokeStyle = this.color;\n          this.ctx.stroke();\n        }\n        compare() {\n          return 1;\n        }\n}\n\nclass BezierEllipse2{\n        constructor(ctx, x, y, a, b,color,type) {\n          this.ctx = ctx;\n          this.x = x;\n          this.y = y;\n          this.a = a;\n          this.b = b;\n          this.type = type;\n          this.color = color;\n\n        }\n        generate(){\n          let k = .5522848;\n          let ox = this.a * k; // 水平控制点偏移量\n          let oy = this.b * k; // 垂直控制点偏移量\n          let ctx = this.ctx;\n          ctx.beginPath();\n          ctx.strokeStyle = this.color;\n          ctx.moveTo(this.x - this.a, this.y);\n          ctx.bezierCurveTo(this.x - this.a, this.y - oy, this.x - ox, this.y - this.b, this.x, this.y - this.b);\n          ctx.bezierCurveTo(this.x + ox, this.y - this.b, this.x + this.a, this.y - oy, this.x + this.a, this.y);\n          ctx.bezierCurveTo(this.x + this.a, this.y + oy, this.x + ox, this.y + this.b, this.x, this.y + this.b);\n          ctx.bezierCurveTo(this.x - ox, this.y + this.b, this.x - this.a, this.y + oy, this.x - this.a, this.y);\n          ctx.closePath();\n        }\n        // ctx.stroke();\n    }\nclass Rectangle{\n        constructor(ctx, x, y, a, b,color,type) {\n          this.ctx = ctx;\n          this.x = x;\n          this.y = y;\n          this.a = a;\n          this.b = b;\n          this.type = type;\n          this.color = color;\n        }\n        generate(){\n          let ctx = this.ctx;\n          ctx.beginPath();\n          ctx.rect(this.x,this.y,this.a,this.b)\n          ctx.strokeStyle = this.color;\n          ctx.stroke();\n          ctx.closePath();\n        }\n        compare(){\n          let minx,miny,maxx,maxy;\n          minx = this.x+this.a;\n          maxx = this.x;\n          miny = this.y+this.b;\n          maxy = this.y;\n          return{\n            minx,miny,maxx,maxy\n          }\n        \n        }\n        // ctx.stroke();\n    }\n\nclass Star{\n        constructor(ctx, x, y, a, b,color,type) {\n          this.ctx = ctx;\n          this.x = x;\n          this.y = y;\n          this.a = a;\n          this.b = b;\n          this.type = type;\n          this.color = color;\n          this.offsetx = [];\n          this.offsety = [];\n        }\n        generate(){\n          //设置是个顶点的坐标，根据顶点制定路径   \n          let ctx = this.ctx;\n          this.offsetx = [];\n          this.offsety = [];\n          ctx.beginPath(); \n          ctx.strokeStyle = this.color;\n          for (let i = 0; i < 6; i++) {\n              ctx.lineTo(Math.cos((18 + i * 72) / 180 * Math.PI)*this.a+this.x,-Math.sin((18 + i * 72) / 180 * Math.PI)*this.b+this.y);\n              ctx.lineTo(Math.cos((54+i*72)/180*Math.PI)*(2/5*this.a)+this.x,-Math.sin((54+i*72)/180*Math.PI)*(2/5*this.b)+this.y);\n              this.offsetx.push(Math.cos((18 + i * 72) / 180 * Math.PI)*this.a+this.x);\n              this.offsetx.push(Math.cos((54+i*72)/180*Math.PI)*(2/5*this.a)+this.x);\n              this.offsety.push(-Math.sin((18 + i * 72) / 180 * Math.PI)*this.b+this.y);\n              this.offsety.push(-Math.sin((54+i*72)/180*Math.PI)*(2/5*this.b)+this.y);\n          }\n          ctx.restore();\n          ctx.closePath();\n        }\n        compare(){\n          let minx,miny,maxx,maxy;\n          let tempx = this.offsetx;\n          let tempy = this.offsety;\n          tempx = maopao(tempx);\n          tempy = maopao(tempy);\n          minx = tempx[0];\n          maxx = tempx[tempx.length-1];\n          miny = tempy[0];\n          maxy = tempy[tempy.length-1];\n          return{\n            minx,miny,maxx,maxy\n          }\n        \n        }\n        // ctx.stroke();\n    }\n\nclass Ploygon{\n        constructor(ctx, x, y, a, b,color,type,polynumber) {\n          this.ctx = ctx;\n          this.x = x;\n          this.y = y;\n          this.a = a;\n          this.b = b;\n          this.type = type;\n          this.color = color;\n          this.polynumber = polynumber;\n          this.offsetx = [];\n          this.offsety = [];\n        }\n        generate(){\n          //设置是个顶点的坐标，根据顶点制定路径   \n          let ctx = this.ctx;\n          let num = this.polynumber;\n          let ang = Math.PI*2/num //旋转的角度\n          this.offsetx = [];\n          this.offsety = [];\n          ctx.save();\n          ctx.translate(this.x,this.y);\n          ctx.strokeStyle = this.color;\n          ctx.moveTo(0,-this.b);\n          ctx.beginPath();\n          for(let i=0;i<num;i++){\n            ctx.rotate(ang);\n            ctx.lineTo(0,-this.b);\n            this.offsetx.push((-this.b*Math.sin(ang*(i+1)))+this.x);\n            this.offsety.push((-this.b*Math.cos(ang*(i+1)))+this.y);\n          }\n          ctx.closePath();\n          ctx.restore();\n        }\n        compare(){\n          let minx,miny,maxx,maxy;\n          let tempx = this.offsetx;\n          let tempy = this.offsety;\n          tempx = maopao(tempx);\n          tempy = maopao(tempy);\n          minx = tempx[0];\n          maxx = tempx[tempx.length-1];\n          miny = tempy[0];\n          maxy = tempy[tempy.length-1];\n          return{\n            minx,miny,maxx,maxy\n          }\n        }\n    }\n\nclass Beeline{\n        constructor(ctx, x, y, a, b,color,type) {\n          this.ctx = ctx;\n          this.x = x;\n          this.y = y;\n          this.a = a;\n          this.b = b;\n          this.type = type;\n          this.color = color;\n        }\n        generate(){\n          //设置是个顶点的坐标，根据顶点制定路径   \n\n          let ctx = this.ctx;\n          ctx.beginPath();\n          ctx.strokeStyle = this.color;\n          ctx.moveTo(this.x,this.y);\n          ctx.lineTo(this.x+this.a,this.y+this.b);\n          ctx.closePath();\n        }\n        \n        // 按偏移的角度生成一个高度为5的长方形来\n        compare(){\n          let minx,miny,maxx,maxy;\n          minx = Math.min(this.x,this.x+this.a);\n          maxx = Math.max(this.x,this.x+this.a);\n          miny = Math.min(this.y,this.y+this.b);\n          maxy = Math.max(this.y,this.y+this.b);\n          return{\n            minx,miny,maxx,maxy\n          }\n        }\n  \n}\n\nclass Radompoly{\n        constructor(ctx, x, y, a, b,tempcount,mox,moy,color,type) {\n          this.ctx = ctx;\n          this.x = x;\n          this.y = y;\n          this.a = a;\n          this.b = b;\n          this.mox = mox;\n          this.moy = moy;\n          this.tempcount = tempcount;\n          this.type = type;\n          this.color = color;\n        }\n        generate(){\n          //设置是个顶点的坐标，根据顶点制定路径   \n        \n\n          let ctx = this.ctx;\n            ctx.beginPath();\n            ctx.moveTo(this.x,this.y);\n            if(this.tempcount!=0){\n              ctx.lineTo(this.mox+this.x,this.moy+this.y);\n            }else{\n              ctx.lineTo(this.x+this.a,this.y+this.b);\n            }\n            ctx.strokeStyle = this.color\n            ctx.closePath();\n        }\n}\n\nclass RadompolyNumber{\n  constructor(ctx, x, y, a, b,tempcount,mox,moy,color,type) {\n          this.ctx = ctx;\n          this.x = x;\n          this.y = y;\n          this.a = a;\n          this.b = b;\n          this.mox = mox;\n          this.moy = moy;\n          this.tempcount = tempcount;\n          this.type = type;\n          this.color = color;\n        }\n         generate(){\n          this.ctx.beginPath();\n          this.ctx.moveTo(this.x,this.y);\n          this.ctx.lineTo(this.a, this.b);\n          this.ctx.closePath();\n        }\n}\n\nclass RadomPolyType{\n  constructor(ctx,type,color,offset,fir,...other) {\n          this.ctx = ctx;\n          this.fir = fir;\n          this.other = other;\n          this.type = type;\n          this.color = color;\n          if(offset==0){\n            this.offset = {shiftX:0,shiftY:0};\n          }else{\n            this.offset = offset;\n          }\n        }\n         generate(){\n          this.ctx.beginPath();\n          this.ctx.moveTo(this.fir.x-this.offset.shiftX,this.fir.y-this.offset.shiftY);\n          this.ctx.lineTo(this.other[0].x-this.offset.shiftX, this.other[0].y-this.offset.shiftY);\n          for(let i=1;i<this.other.length;i++){\n            this.ctx.lineTo(this.other[i].x-this.offset.shiftX, this.other[i].y-this.offset.shiftY);\n          }\n          this.ctx.closePath();\n        }\n        compare(){\n          // 比较大小\n          let minx,miny,maxx,maxy;\n          let tempx = [this.fir.x-this.offset.shiftX];\n          let tempy = [this.fir.y-this.offset.shiftY];\n          for (let i = 0; i < this.other.length; i++) {\n            tempx.push(this.other[i].x-this.offset.shiftX);\n            tempy.push(this.other[i].y-this.offset.shiftY);\n          }\n          tempx = maopao(tempx);\n          tempy = maopao(tempy);\n          minx = tempx[0];\n          maxx = tempx[tempx.length-1];\n          miny = tempy[0];\n          maxy = tempy[tempy.length-1];\n          return{\n            minx,miny,maxx,maxy\n          }\n        }\n}\n\nfunction maopao(arr){\n  for(let i=0;i<arr.length;i++){\n    for(let j=0;j<arr.length-1-i;j++){\n        if(arr[j]>arr[j+1]){\n            let temp = arr[j];\n            arr[j]=arr[j+1];\n            arr[j+1]=temp\n        }\n    }\n  }\n  return arr;\n}\n\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./main.vue?vue&type=template&id=6f3769ec&scoped=true&\"\nimport script from \"./main.vue?vue&type=script&lang=js&\"\nexport * from \"./main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6f3769ec\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-row',{attrs:{\"gutter\":12}},[_c('el-col',{attrs:{\"span\":8}},[_c('el-card',{attrs:{\"shadow\":\"hover\"}},[_c('el-container',[_c('el-main',[_c('div',{staticClass:\"flexColumn\"},[_c('div',[_c('el-button',{attrs:{\"size\":\"small\",\"icon\":\"el-icon-smoking\",\"circle\":\"\"},on:{\"click\":function($event){return _vm.clean()}}},[_vm._v(\"清空画布\")]),_c('el-button',{attrs:{\"size\":\"small\",\"icon\":\"el-icon-delete\",\"circle\":\"\"},on:{\"click\":function($event){return _vm.dele()}}},[_vm._v(\"删除图形\")]),_c('el-button',{attrs:{\"size\":\"small\",\"icon\":\"el-icon-folder-add\",\"circle\":\"\"},on:{\"click\":function($event){return _vm.savecav()}}},[_vm._v(\"保存图形\")]),_c('el-button',{attrs:{\"size\":\"small\",\"icon\":\"el-icon-folder-opened\\n\",\"circle\":\"\"},on:{\"click\":function($event){return _vm.loadcav()}}},[_vm._v(\"加载图形\")])],1)])]),_c('el-footer',{staticStyle:{\"height\":\"30px\"}},[_vm._v(\"工具\")])],1)],1)],1),_c('el-col',{attrs:{\"span\":8}},[_c('el-card',{attrs:{\"shadow\":\"hover\"}},[_c('el-container',[_c('el-main',[_c('div',{staticStyle:{\"line-height\":\"16px\"}},[_c('div',[_c('el-button',{attrs:{\"autofocus\":true,\"size\":\"small\"},on:{\"click\":function($event){return _vm.line()}}},[_vm._v(\"线条\")]),_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.beeline()}}},[_vm._v(\"直线\")]),_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.star()}}},[_vm._v(\"五角星\")])],1),_c('div',[_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.rectangle()}}},[_vm._v(\"矩形\")]),_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.radius()}}},[_vm._v(\"圆形\")]),_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.Ploygon()}}},[_vm._v(\"多边形\")]),_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.radomPloygon()}}},[_vm._v(\"任意多边形\")])],1)])]),_c('el-footer',{staticStyle:{\"height\":\"30px\"}},[_vm._v(\"形状\")])],1)],1)],1),_c('el-col',{attrs:{\"span\":6}},[_c('el-card',{attrs:{\"shadow\":\"hover\"}},[_c('el-container',[_c('el-main',{staticStyle:{\"padding\":\"8.5px\"}},[_c('div',{staticClass:\"colorstyle\"},[_c('div',{staticClass:\"colorstylechild\"},[_c('el-button',{staticClass:\"test\",style:(_vm.styleObj[0]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[1]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[2]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[3]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[4]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}})],1),_c('div',{staticClass:\"colorstylechild\"},[_c('el-button',{style:(_vm.styleObj[5]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[6]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[7]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[8]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[9]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}})],1),_c('div',{staticClass:\"colorstylechild\"},[_c('el-button',{style:(_vm.styleObj[10]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[11]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[12]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[13]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}}),_c('el-button',{style:(_vm.styleObj[14]),attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.color1($event)}}})],1)])]),_c('el-footer',{staticStyle:{\"height\":\"30px\"}},[_vm._v(\"颜色\")])],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <el-row :gutter=\"12\">\r\n    <el-col :span=\"8\">\r\n        <el-card shadow=\"hover\">\r\n        <el-container>\r\n        <el-main>\r\n          <div class=\"flexColumn\">\r\n            <!-- <div><el-button icon=\"el-icon-edit\" circle>铅笔</el-button>\r\n              </div>\r\n            <div><el-button icon=\"el-icon-help\" circle>橡皮擦</el-button>\r\n              </div> -->\r\n            <div>\r\n              <el-button @click=\"clean()\" size=\"small\" icon=\"el-icon-smoking\" circle>清空画布</el-button>\r\n              <el-button @click=\"dele()\" size=\"small\" icon=\"el-icon-delete\" circle>删除图形</el-button>\r\n              <el-button @click=\"savecav()\" size=\"small\" icon=\"el-icon-folder-add\" circle>保存图形</el-button>\r\n              <el-button @click=\"loadcav()\" size=\"small\" icon=\"el-icon-folder-opened\r\n\" circle>加载图形</el-button>\r\n              </div>\r\n        </div>\r\n        </el-main>\r\n        <el-footer style=\"height:30px;\">工具</el-footer>\r\n      </el-container>\r\n        </el-card>\r\n    </el-col>\r\n    <el-col :span=\"8\">\r\n        <el-card shadow=\"hover\">\r\n        <el-container>\r\n        <el-main>\r\n          <div style=\"line-height: 16px;\">\r\n          <div>\r\n          <el-button :autofocus=\"true\" @click=\"line()\" size=\"small\">线条</el-button>\r\n          <el-button @click=\"beeline()\" size=\"small\">直线</el-button>\r\n          <el-button @click=\"star()\" size=\"small\">五角星</el-button>\r\n          </div>\r\n          <div>\r\n            <el-button @click=\"rectangle()\" size=\"small\">矩形</el-button>\r\n          <el-button @click=\"radius()\" size=\"small\">圆形</el-button>\r\n          <el-button @click=\"Ploygon()\" size=\"small\">多边形</el-button>\r\n          <el-button @click=\"radomPloygon()\" size=\"small\">任意多边形</el-button>\r\n          </div>\r\n          </div>\r\n        </el-main>\r\n        <el-footer style=\"height:30px;\">形状</el-footer>\r\n      </el-container>\r\n        </el-card>\r\n    </el-col>\r\n    <el-col :span=\"6\">\r\n        <el-card shadow=\"hover\">\r\n        <el-container>\r\n        <el-main style=\"padding:8.5px;\">\r\n          <div class=\"colorstyle\">\r\n            <div class=\"colorstylechild\"> \r\n          <el-button size=\"mini\" class=\"test\" @click=\"color1($event)\" :style=\"styleObj[0]\" ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[1]\" ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[2]\" ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[3]\" ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[4]\" ></el-button>\r\n          </div>\r\n            <div class=\"colorstylechild\">\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[5]\" ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[6]\" ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[7]\" ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[8]\" ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[9]\" ></el-button>\r\n          </div>\r\n          <div class=\"colorstylechild\">\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[10]\" ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[11]\" ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[12]\"  ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[13]\"  ></el-button>\r\n          <el-button size=\"mini\" @click=\"color1($event)\" :style=\"styleObj[14]\"  ></el-button>\r\n          </div>\r\n          </div>\r\n        </el-main>\r\n        <el-footer style=\"height:30px;\">颜色</el-footer>\r\n      </el-container>\r\n        </el-card>\r\n    </el-col>\r\n    </el-row>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport eventVue from '../components/eventVue'\r\nexport default {\r\n  name: 'toolBar',\r\n  props: {\r\n    msg: String\r\n  },\r\n  mounted() {\r\n  this.show();\r\n  },\r\n  data(){\r\n    return{\r\n      act:'1',\r\n      styleObj:[\r\n        { \r\n          value:'1',\r\n          backgroundColor:'rgb(0,0,0,1)'\r\n        },\r\n        { \r\n          value:'2',\r\n          backgroundColor:'rgb(127,127,127,1)'\r\n        },\r\n        { \r\n          value:'3',\r\n          backgroundColor:'rgb(136,0,21,1)'\r\n        },\r\n        { \r\n          value:'4',\r\n          backgroundColor:'rgb(120,150,30,1)'\r\n        },\r\n        { \r\n         value:'5',\r\n          backgroundColor:'rgb(237,28,36,1)'\r\n        },\r\n        { \r\n          value:'6',\r\n          backgroundColor:'rgb(255,242,0,1)'\r\n        },\r\n        { \r\n          value:'7',\r\n          backgroundColor:'rgb(255,127,39,1)'\r\n        },\r\n        { \r\n          value:'8',\r\n          backgroundColor:'rgb(34,177,76,1)'\r\n        },\r\n        { \r\n          value:'9',\r\n          backgroundColor:'rgb(0,162,232,1)'\r\n        },\r\n        { \r\n          value:'10',\r\n          backgroundColor:'rgb(63,72,204,1)'\r\n        },\r\n        { \r\n          value:'11',\r\n          backgroundColor:'rgb(163,73,164,1)'\r\n        },\r\n        { \r\n          value:'12',\r\n          backgroundColor:'rgb(255,255,255,1)'\r\n        },\r\n        { \r\n          value:'13',\r\n          backgroundColor:'rgb(152,217,234,1)'\r\n        },\r\n        { \r\n          value:'14',\r\n          backgroundColor:'rgb(30,152,164,1)'\r\n        },\r\n      ],\r\n      // styleObj1:{backgroundColor:'red'},\r\n    }\r\n  },\r\n  \r\n  methods:{\r\n  show(){\r\n      // console.log('hellowolrd');\r\n  },\r\n  color1(e){\r\n    eventVue.$emit(\"myFun\",e.currentTarget.style.backgroundColor)\r\n    // e.currentTarget.style.border = '1px solid rgb(3, 33, 63)';\r\n    // console.log(e.currentTarget.style);\r\n  },\r\n  line() {\r\n    eventVue.$emit(\"type\",\"line\");\r\n  },\r\n  beeline() {\r\n    eventVue.$emit(\"type\",\"beeline\");\r\n  },\r\n  radius() {\r\n    eventVue.$emit(\"type\",\"radius\");\r\n  },\r\n  rectangle() {\r\n    eventVue.$emit(\"type\",\"rectangle\");  \r\n  },\r\n  star() {\r\n    eventVue.$emit(\"type\",\"star\");  \r\n  },\r\n  Ploygon() {\r\n    eventVue.$emit(\"type\",\"Ploygon\");  \r\n  },\r\n  radomPloygon() {\r\n    eventVue.$emit(\"type\",\"radomPloygon\");  \r\n  },\r\n  clean() {\r\n    eventVue.$emit(\"clean\",true);\r\n  },\r\n  dele() {\r\n    eventVue.$emit('dele',true);\r\n  },\r\n  savecav() {\r\n    eventVue.$emit('savecav',true);\r\n  },\r\n  loadcav() {\r\n    eventVue.$emit('loadcav',true);\r\n  },\r\n  \r\n}\r\n}\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n    .flexColumn{\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-bottom:23px;\r\n    }\r\n      .el-header, .el-footer {\r\n    background-color: #B3C0D1;\r\n    color: #333;\r\n    text-align: center;\r\n    line-height: 30px;\r\n    }\r\n    .colorstyle{\r\n      /* padding-top:100px; */\r\n      \r\n      display: flex;\r\n      justify-content: center;\r\n      flex-wrap:wrap;\r\n      line-height: 16px;\r\n      margin-bottom:22px;\r\n    }\r\n    .colorstylechild{\r\n      width:100%;\r\n    }\r\n    .el-main {\r\n      background-color: #E9EEF3;\r\n      color: #333;\r\n      text-align: center;\r\n      line-height: 40px;\r\n    }\r\n    body > .el-container {\r\n      margin-bottom: 40px;\r\n    }\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./toolBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./toolBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./toolBar.vue?vue&type=template&id=d9bc333a&scoped=true&\"\nimport script from \"./toolBar.vue?vue&type=script&lang=js&\"\nexport * from \"./toolBar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./toolBar.vue?vue&type=style&index=0&id=d9bc333a&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d9bc333a\",\n  null\n  \n)\n\nexport default component.exports","<style>\n\n</style>\n\n\n<template>\n  <div id=\"app\">\n    <toolBar/>\n    <HelloWorld msg=\"\"/>\n  </div>\n  \n  \n</template>\n\n<script>\nimport HelloWorld from './components/main.vue'\nimport toolBar from './components/toolBar.vue'\nexport default {\n  name: 'app',\n  components: {\n    HelloWorld,\n    toolBar\n  },\n  data(){\n    return{\n      activeIndex: '1',\n      activeIndex2: '1'\n    }\n  },\n  methods: {\n      // handleSelect(key, keyPath) {\n      //   console.log(key, keyPath);\n      // }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 0px;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=16bd4826&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style1 from \"./App.vue?vue&type=style&index=1&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* eslint-disable */\nimport Vue from 'vue';\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\nimport App from './App.vue';\n\nVue.use(ElementUI);\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n});\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./toolBar.vue?vue&type=style&index=0&id=d9bc333a&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./toolBar.vue?vue&type=style&index=0&id=d9bc333a&scoped=true&lang=css&\"","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=1&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=1&lang=css&\""],"sourceRoot":""}